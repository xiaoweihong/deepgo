// Code generated by protoc-gen-go. DO NOT EDIT.
// source: face.proto

package go_kafka

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 证件类型
type IdType int32

const (
	IdType_Id_Type_Unknown   IdType = 0
	IdType_Id_Type_IdNo      IdType = 1
	IdType_Id_Type_Passport  IdType = 2
	IdType_Id_Type_Officer   IdType = 3
	IdType_Id_Type_Sergeant  IdType = 4
	IdType_Id_Type_Temporary IdType = 5
)

var IdType_name = map[int32]string{
	0: "Id_Type_Unknown",
	1: "Id_Type_IdNo",
	2: "Id_Type_Passport",
	3: "Id_Type_Officer",
	4: "Id_Type_Sergeant",
	5: "Id_Type_Temporary",
}
var IdType_value = map[string]int32{
	"Id_Type_Unknown":   0,
	"Id_Type_IdNo":      1,
	"Id_Type_Passport":  2,
	"Id_Type_Officer":   3,
	"Id_Type_Sergeant":  4,
	"Id_Type_Temporary": 5,
}

func (x IdType) String() string {
	return proto.EnumName(IdType_name, int32(x))
}
func (IdType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_face_4e3499fa32a7ad2b, []int{0}
}

// 人员属性
type CivilAttr struct {
	// 姓名
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	// 证件类型
	IdType IdType `protobuf:"varint,2,opt,name=IdType,proto3,enum=IdType" json:"IdType,omitempty"`
	// 证件号码
	IdNo string `protobuf:"bytes,3,opt,name=IdNo,proto3" json:"IdNo,omitempty"`
	// 性别 Id
	GenderId int32 `protobuf:"varint,4,opt,name=GenderId,proto3" json:"GenderId,omitempty"`
	// 性别置信度
	GenderConfidence float32 `protobuf:"fixed32,5,opt,name=GenderConfidence,proto3" json:"GenderConfidence,omitempty"`
	// 年龄 Id
	AgeId int32 `protobuf:"varint,6,opt,name=AgeId,proto3" json:"AgeId,omitempty"`
	// 年龄置信度
	AgeConfidence float32 `protobuf:"fixed32,7,opt,name=AgeConfidence,proto3" json:"AgeConfidence,omitempty"`
	// 民族 Id
	NationId int32 `protobuf:"varint,8,opt,name=NationId,proto3" json:"NationId,omitempty"`
	// 民族置信度
	NationConfidence float32 `protobuf:"fixed32,9,opt,name=NationConfidence,proto3" json:"NationConfidence,omitempty"`
	// 眼镜类型 Id
	GlassId int32 `protobuf:"varint,10,opt,name=GlassId,proto3" json:"GlassId,omitempty"`
	// 眼镜置信度
	GlassConfidence float32 `protobuf:"fixed32,11,opt,name=GlassConfidence,proto3" json:"GlassConfidence,omitempty"`
	// 地址
	Addr string `protobuf:"bytes,12,opt,name=Addr,proto3" json:"Addr,omitempty"`
	// 出生日期
	Birthday string `protobuf:"bytes,13,opt,name=Birthday,proto3" json:"Birthday,omitempty"`
	// 备注
	Comment string `protobuf:"bytes,14,opt,name=Comment,proto3" json:"Comment,omitempty"`
	// 帽子标识 Id
	HatId int32 `protobuf:"varint,15,opt,name=HatId,proto3" json:"HatId,omitempty"`
	// 帽子置信度
	HatConfidence float32 `protobuf:"fixed32,16,opt,name=HatConfidence,proto3" json:"HatConfidence,omitempty"`
	// 人员标识，uuid
	CivilAttrId string `protobuf:"bytes,17,opt,name=CivilAttrId,proto3" json:"CivilAttrId,omitempty"`
	// 头盔标识 Id
	HelmetId int32 `protobuf:"varint,18,opt,name=HelmetId,proto3" json:"HelmetId,omitempty"`
	// 头盔置信度
	HelmetConfidence     float32    `protobuf:"fixed32,19,opt,name=HelmetConfidence,proto3" json:"HelmetConfidence,omitempty"`
	Status               TaskStatus `protobuf:"varint,98,opt,name=Status,proto3,enum=TaskStatus" json:"Status,omitempty"`
	AttrId               string     `protobuf:"bytes,99,opt,name=AttrId,proto3" json:"AttrId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CivilAttr) Reset()         { *m = CivilAttr{} }
func (m *CivilAttr) String() string { return proto.CompactTextString(m) }
func (*CivilAttr) ProtoMessage()    {}
func (*CivilAttr) Descriptor() ([]byte, []int) {
	return fileDescriptor_face_4e3499fa32a7ad2b, []int{0}
}
func (m *CivilAttr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CivilAttr.Unmarshal(m, b)
}
func (m *CivilAttr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CivilAttr.Marshal(b, m, deterministic)
}
func (dst *CivilAttr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CivilAttr.Merge(dst, src)
}
func (m *CivilAttr) XXX_Size() int {
	return xxx_messageInfo_CivilAttr.Size(m)
}
func (m *CivilAttr) XXX_DiscardUnknown() {
	xxx_messageInfo_CivilAttr.DiscardUnknown(m)
}

var xxx_messageInfo_CivilAttr proto.InternalMessageInfo

func (m *CivilAttr) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CivilAttr) GetIdType() IdType {
	if m != nil {
		return m.IdType
	}
	return IdType_Id_Type_Unknown
}

func (m *CivilAttr) GetIdNo() string {
	if m != nil {
		return m.IdNo
	}
	return ""
}

func (m *CivilAttr) GetGenderId() int32 {
	if m != nil {
		return m.GenderId
	}
	return 0
}

func (m *CivilAttr) GetGenderConfidence() float32 {
	if m != nil {
		return m.GenderConfidence
	}
	return 0
}

func (m *CivilAttr) GetAgeId() int32 {
	if m != nil {
		return m.AgeId
	}
	return 0
}

func (m *CivilAttr) GetAgeConfidence() float32 {
	if m != nil {
		return m.AgeConfidence
	}
	return 0
}

func (m *CivilAttr) GetNationId() int32 {
	if m != nil {
		return m.NationId
	}
	return 0
}

func (m *CivilAttr) GetNationConfidence() float32 {
	if m != nil {
		return m.NationConfidence
	}
	return 0
}

func (m *CivilAttr) GetGlassId() int32 {
	if m != nil {
		return m.GlassId
	}
	return 0
}

func (m *CivilAttr) GetGlassConfidence() float32 {
	if m != nil {
		return m.GlassConfidence
	}
	return 0
}

func (m *CivilAttr) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *CivilAttr) GetBirthday() string {
	if m != nil {
		return m.Birthday
	}
	return ""
}

func (m *CivilAttr) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *CivilAttr) GetHatId() int32 {
	if m != nil {
		return m.HatId
	}
	return 0
}

func (m *CivilAttr) GetHatConfidence() float32 {
	if m != nil {
		return m.HatConfidence
	}
	return 0
}

func (m *CivilAttr) GetCivilAttrId() string {
	if m != nil {
		return m.CivilAttrId
	}
	return ""
}

func (m *CivilAttr) GetHelmetId() int32 {
	if m != nil {
		return m.HelmetId
	}
	return 0
}

func (m *CivilAttr) GetHelmetConfidence() float32 {
	if m != nil {
		return m.HelmetConfidence
	}
	return 0
}

func (m *CivilAttr) GetStatus() TaskStatus {
	if m != nil {
		return m.Status
	}
	return TaskStatus_Task_Status_Unknown
}

func (m *CivilAttr) GetAttrId() string {
	if m != nil {
		return m.AttrId
	}
	return ""
}

type ImageResult struct {
	// 原图图片地址
	ImageUri string `protobuf:"bytes,1,opt,name=ImageUri,proto3" json:"ImageUri,omitempty"`
	// 缩略图图片地址
	ThumbnailImageUri string `protobuf:"bytes,2,opt,name=ThumbnailImageUri,proto3" json:"ThumbnailImageUri,omitempty"`
	// 截图图片地址
	CutboardImageUri string `protobuf:"bytes,3,opt,name=CutboardImageUri,proto3" json:"CutboardImageUri,omitempty"`
	// 截图bounding box左上角 X 坐标
	CutboardX int32 `protobuf:"varint,4,opt,name=CutboardX,proto3" json:"CutboardX,omitempty"`
	// 截图bounding box左上角 Y 坐标
	CutboardY int32 `protobuf:"varint,5,opt,name=CutboardY,proto3" json:"CutboardY,omitempty"`
	// 截图宽度
	CutboardWidth int32 `protobuf:"varint,6,opt,name=CutboardWidth,proto3" json:"CutboardWidth,omitempty"`
	// 截图高度
	CutboardHeight int32 `protobuf:"varint,7,opt,name=CutboardHeight,proto3" json:"CutboardHeight,omitempty"`
	// 原始图片的宽度
	CutboardResWidth int32 `protobuf:"varint,8,opt,name=CutboardResWidth,proto3" json:"CutboardResWidth,omitempty"`
	// 原始图片的高度
	CutboardResHeight int32 `protobuf:"varint,9,opt,name=CutboardResHeight,proto3" json:"CutboardResHeight,omitempty"`
	// 原始图片的二进制内容，base64 encoded
	BinData string `protobuf:"bytes,16,opt,name=BinData,proto3" json:"BinData,omitempty"`
	// 人脸特征码
	Feature string `protobuf:"bytes,17,opt,name=Feature,proto3" json:"Feature,omitempty"`
	// 该抓拍人脸是否加入比对库
	IsRanked int32 `protobuf:"varint,18,opt,name=IsRanked,proto3" json:"IsRanked,omitempty"`
	// 该抓拍人脸是否符合质量过滤
	QualityOK bool       `protobuf:"varint,19,opt,name=QualityOK,proto3" json:"QualityOK,omitempty"`
	Status    TaskStatus `protobuf:"varint,98,opt,name=Status,proto3,enum=TaskStatus" json:"Status,omitempty"`
	// 原始图片标识，uuid，仅用于注册的静态人脸，不用于抓拍人脸
	ImageId string `protobuf:"bytes,99,opt,name=ImageId,proto3" json:"ImageId,omitempty"`
	// 原始图片类型，仅用于注册的静态人脸，不用于抓拍人脸
	ImageType            int32    `protobuf:"varint,100,opt,name=ImageType,proto3" json:"ImageType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageResult) Reset()         { *m = ImageResult{} }
func (m *ImageResult) String() string { return proto.CompactTextString(m) }
func (*ImageResult) ProtoMessage()    {}
func (*ImageResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_face_4e3499fa32a7ad2b, []int{1}
}
func (m *ImageResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageResult.Unmarshal(m, b)
}
func (m *ImageResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageResult.Marshal(b, m, deterministic)
}
func (dst *ImageResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageResult.Merge(dst, src)
}
func (m *ImageResult) XXX_Size() int {
	return xxx_messageInfo_ImageResult.Size(m)
}
func (m *ImageResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageResult.DiscardUnknown(m)
}

var xxx_messageInfo_ImageResult proto.InternalMessageInfo

func (m *ImageResult) GetImageUri() string {
	if m != nil {
		return m.ImageUri
	}
	return ""
}

func (m *ImageResult) GetThumbnailImageUri() string {
	if m != nil {
		return m.ThumbnailImageUri
	}
	return ""
}

func (m *ImageResult) GetCutboardImageUri() string {
	if m != nil {
		return m.CutboardImageUri
	}
	return ""
}

func (m *ImageResult) GetCutboardX() int32 {
	if m != nil {
		return m.CutboardX
	}
	return 0
}

func (m *ImageResult) GetCutboardY() int32 {
	if m != nil {
		return m.CutboardY
	}
	return 0
}

func (m *ImageResult) GetCutboardWidth() int32 {
	if m != nil {
		return m.CutboardWidth
	}
	return 0
}

func (m *ImageResult) GetCutboardHeight() int32 {
	if m != nil {
		return m.CutboardHeight
	}
	return 0
}

func (m *ImageResult) GetCutboardResWidth() int32 {
	if m != nil {
		return m.CutboardResWidth
	}
	return 0
}

func (m *ImageResult) GetCutboardResHeight() int32 {
	if m != nil {
		return m.CutboardResHeight
	}
	return 0
}

func (m *ImageResult) GetBinData() string {
	if m != nil {
		return m.BinData
	}
	return ""
}

func (m *ImageResult) GetFeature() string {
	if m != nil {
		return m.Feature
	}
	return ""
}

func (m *ImageResult) GetIsRanked() int32 {
	if m != nil {
		return m.IsRanked
	}
	return 0
}

func (m *ImageResult) GetQualityOK() bool {
	if m != nil {
		return m.QualityOK
	}
	return false
}

func (m *ImageResult) GetStatus() TaskStatus {
	if m != nil {
		return m.Status
	}
	return TaskStatus_Task_Status_Unknown
}

func (m *ImageResult) GetImageId() string {
	if m != nil {
		return m.ImageId
	}
	return ""
}

func (m *ImageResult) GetImageType() int32 {
	if m != nil {
		return m.ImageType
	}
	return 0
}

// 人脸抓拍记录
type CapturedFace struct {
	// Face 唯一标识，uuid，每个抓拍都不一样
	FaceId string `protobuf:"bytes,1,opt,name=FaceId,proto3" json:"FaceId,omitempty"`
	// Face 聚类标识，uuid，同一个人脸的 ReId 一样
	FaceReId string `protobuf:"bytes,2,opt,name=FaceReId,proto3" json:"FaceReId,omitempty"`
	// 抓拍时间
	Timestamp int64 `protobuf:"varint,3,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	// 抓拍设备Id
	SensorId string `protobuf:"bytes,4,opt,name=SensorId,proto3" json:"SensorId,omitempty"`
	// 抓拍设备描述
	SensorName string `protobuf:"bytes,5,opt,name=SensorName,proto3" json:"SensorName,omitempty"`
	// 该人脸抓拍的置信度
	Confidence float32 `protobuf:"fixed32,6,opt,name=Confidence,proto3" json:"Confidence,omitempty"`
	// 该抓拍人脸是否已经报警
	IsWarned int32 `protobuf:"varint,7,opt,name=IsWarned,proto3" json:"IsWarned,omitempty"`
	// 该抓拍人脸的检测属性，抽象性质的属性，比如性别，民族，年龄，穿着等
	CivilAttr *CivilAttr `protobuf:"bytes,8,opt,name=CivilAttr,proto3" json:"CivilAttr,omitempty"`
	// 该抓拍人脸对应的原抓拍图信息
	ImageResult *ImageResult `protobuf:"bytes,9,opt,name=ImageResult,proto3" json:"ImageResult,omitempty"`
	// 该抓拍人脸的质量
	QualityParams *FaceQuality `protobuf:"bytes,20,opt,name=QualityParams,proto3" json:"QualityParams,omitempty"`
	// 数据库状态
	Status               TaskStatus `protobuf:"varint,99,opt,name=Status,proto3,enum=TaskStatus" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CapturedFace) Reset()         { *m = CapturedFace{} }
func (m *CapturedFace) String() string { return proto.CompactTextString(m) }
func (*CapturedFace) ProtoMessage()    {}
func (*CapturedFace) Descriptor() ([]byte, []int) {
	return fileDescriptor_face_4e3499fa32a7ad2b, []int{2}
}
func (m *CapturedFace) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CapturedFace.Unmarshal(m, b)
}
func (m *CapturedFace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CapturedFace.Marshal(b, m, deterministic)
}
func (dst *CapturedFace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CapturedFace.Merge(dst, src)
}
func (m *CapturedFace) XXX_Size() int {
	return xxx_messageInfo_CapturedFace.Size(m)
}
func (m *CapturedFace) XXX_DiscardUnknown() {
	xxx_messageInfo_CapturedFace.DiscardUnknown(m)
}

var xxx_messageInfo_CapturedFace proto.InternalMessageInfo

func (m *CapturedFace) GetFaceId() string {
	if m != nil {
		return m.FaceId
	}
	return ""
}

func (m *CapturedFace) GetFaceReId() string {
	if m != nil {
		return m.FaceReId
	}
	return ""
}

func (m *CapturedFace) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *CapturedFace) GetSensorId() string {
	if m != nil {
		return m.SensorId
	}
	return ""
}

func (m *CapturedFace) GetSensorName() string {
	if m != nil {
		return m.SensorName
	}
	return ""
}

func (m *CapturedFace) GetConfidence() float32 {
	if m != nil {
		return m.Confidence
	}
	return 0
}

func (m *CapturedFace) GetIsWarned() int32 {
	if m != nil {
		return m.IsWarned
	}
	return 0
}

func (m *CapturedFace) GetCivilAttr() *CivilAttr {
	if m != nil {
		return m.CivilAttr
	}
	return nil
}

func (m *CapturedFace) GetImageResult() *ImageResult {
	if m != nil {
		return m.ImageResult
	}
	return nil
}

func (m *CapturedFace) GetQualityParams() *FaceQuality {
	if m != nil {
		return m.QualityParams
	}
	return nil
}

func (m *CapturedFace) GetStatus() TaskStatus {
	if m != nil {
		return m.Status
	}
	return TaskStatus_Task_Status_Unknown
}

type FaceQuality struct {
	AlignScore            float32  `protobuf:"fixed32,1,opt,name=AlignScore,proto3" json:"AlignScore,omitempty"`
	AlignScore_GFrontface float32  `protobuf:"fixed32,2,opt,name=AlignScore_G_frontface,json=AlignScoreGFrontface,proto3" json:"AlignScore_G_frontface,omitempty"`
	AlignScore_GIsface    float32  `protobuf:"fixed32,3,opt,name=AlignScore_G_isface,json=AlignScoreGIsface,proto3" json:"AlignScore_G_isface,omitempty"`
	Aspect                float32  `protobuf:"fixed32,4,opt,name=Aspect,proto3" json:"Aspect,omitempty"`
	Blur                  float32  `protobuf:"fixed32,5,opt,name=Blur,proto3" json:"Blur,omitempty"`
	Border                float32  `protobuf:"fixed32,6,opt,name=Border,proto3" json:"Border,omitempty"`
	DetectScore           float32  `protobuf:"fixed32,7,opt,name=DetectScore,proto3" json:"DetectScore,omitempty"`
	Pitch                 float32  `protobuf:"fixed32,8,opt,name=Pitch,proto3" json:"Pitch,omitempty"`
	Roll                  float32  `protobuf:"fixed32,9,opt,name=Roll,proto3" json:"Roll,omitempty"`
	Size                  float32  `protobuf:"fixed32,10,opt,name=Size,proto3" json:"Size,omitempty"`
	Yaw                   float32  `protobuf:"fixed32,11,opt,name=Yaw,proto3" json:"Yaw,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *FaceQuality) Reset()         { *m = FaceQuality{} }
func (m *FaceQuality) String() string { return proto.CompactTextString(m) }
func (*FaceQuality) ProtoMessage()    {}
func (*FaceQuality) Descriptor() ([]byte, []int) {
	return fileDescriptor_face_4e3499fa32a7ad2b, []int{3}
}
func (m *FaceQuality) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FaceQuality.Unmarshal(m, b)
}
func (m *FaceQuality) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FaceQuality.Marshal(b, m, deterministic)
}
func (dst *FaceQuality) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FaceQuality.Merge(dst, src)
}
func (m *FaceQuality) XXX_Size() int {
	return xxx_messageInfo_FaceQuality.Size(m)
}
func (m *FaceQuality) XXX_DiscardUnknown() {
	xxx_messageInfo_FaceQuality.DiscardUnknown(m)
}

var xxx_messageInfo_FaceQuality proto.InternalMessageInfo

func (m *FaceQuality) GetAlignScore() float32 {
	if m != nil {
		return m.AlignScore
	}
	return 0
}

func (m *FaceQuality) GetAlignScore_GFrontface() float32 {
	if m != nil {
		return m.AlignScore_GFrontface
	}
	return 0
}

func (m *FaceQuality) GetAlignScore_GIsface() float32 {
	if m != nil {
		return m.AlignScore_GIsface
	}
	return 0
}

func (m *FaceQuality) GetAspect() float32 {
	if m != nil {
		return m.Aspect
	}
	return 0
}

func (m *FaceQuality) GetBlur() float32 {
	if m != nil {
		return m.Blur
	}
	return 0
}

func (m *FaceQuality) GetBorder() float32 {
	if m != nil {
		return m.Border
	}
	return 0
}

func (m *FaceQuality) GetDetectScore() float32 {
	if m != nil {
		return m.DetectScore
	}
	return 0
}

func (m *FaceQuality) GetPitch() float32 {
	if m != nil {
		return m.Pitch
	}
	return 0
}

func (m *FaceQuality) GetRoll() float32 {
	if m != nil {
		return m.Roll
	}
	return 0
}

func (m *FaceQuality) GetSize() float32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *FaceQuality) GetYaw() float32 {
	if m != nil {
		return m.Yaw
	}
	return 0
}

type CapturedFaceResult struct {
	AllSize              int32           `protobuf:"varint,1,opt,name=AllSize,proto3" json:"AllSize,omitempty"`
	ReturnedSize         int32           `protobuf:"varint,2,opt,name=ReturnedSize,proto3" json:"ReturnedSize,omitempty"`
	CapturedFaces        []*CapturedFace `protobuf:"bytes,3,rep,name=CapturedFaces,proto3" json:"CapturedFaces,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CapturedFaceResult) Reset()         { *m = CapturedFaceResult{} }
func (m *CapturedFaceResult) String() string { return proto.CompactTextString(m) }
func (*CapturedFaceResult) ProtoMessage()    {}
func (*CapturedFaceResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_face_4e3499fa32a7ad2b, []int{4}
}
func (m *CapturedFaceResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CapturedFaceResult.Unmarshal(m, b)
}
func (m *CapturedFaceResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CapturedFaceResult.Marshal(b, m, deterministic)
}
func (dst *CapturedFaceResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CapturedFaceResult.Merge(dst, src)
}
func (m *CapturedFaceResult) XXX_Size() int {
	return xxx_messageInfo_CapturedFaceResult.Size(m)
}
func (m *CapturedFaceResult) XXX_DiscardUnknown() {
	xxx_messageInfo_CapturedFaceResult.DiscardUnknown(m)
}

var xxx_messageInfo_CapturedFaceResult proto.InternalMessageInfo

func (m *CapturedFaceResult) GetAllSize() int32 {
	if m != nil {
		return m.AllSize
	}
	return 0
}

func (m *CapturedFaceResult) GetReturnedSize() int32 {
	if m != nil {
		return m.ReturnedSize
	}
	return 0
}

func (m *CapturedFaceResult) GetCapturedFaces() []*CapturedFace {
	if m != nil {
		return m.CapturedFaces
	}
	return nil
}

type FaceRepo struct {
	RepoId               string     `protobuf:"bytes,1,opt,name=RepoId,proto3" json:"RepoId,omitempty"`
	RepoName             string     `protobuf:"bytes,2,opt,name=RepoName,proto3" json:"RepoName,omitempty"`
	Timestamp            int64      `protobuf:"varint,3,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Comment              string     `protobuf:"bytes,4,opt,name=Comment,proto3" json:"Comment,omitempty"`
	PicCount             int32      `protobuf:"varint,5,opt,name=PicCount,proto3" json:"PicCount,omitempty"`
	NameListAttr         int32      `protobuf:"varint,6,opt,name=NameListAttr,proto3" json:"NameListAttr,omitempty"`
	Status               TaskStatus `protobuf:"varint,99,opt,name=Status,proto3,enum=TaskStatus" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *FaceRepo) Reset()         { *m = FaceRepo{} }
func (m *FaceRepo) String() string { return proto.CompactTextString(m) }
func (*FaceRepo) ProtoMessage()    {}
func (*FaceRepo) Descriptor() ([]byte, []int) {
	return fileDescriptor_face_4e3499fa32a7ad2b, []int{5}
}
func (m *FaceRepo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FaceRepo.Unmarshal(m, b)
}
func (m *FaceRepo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FaceRepo.Marshal(b, m, deterministic)
}
func (dst *FaceRepo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FaceRepo.Merge(dst, src)
}
func (m *FaceRepo) XXX_Size() int {
	return xxx_messageInfo_FaceRepo.Size(m)
}
func (m *FaceRepo) XXX_DiscardUnknown() {
	xxx_messageInfo_FaceRepo.DiscardUnknown(m)
}

var xxx_messageInfo_FaceRepo proto.InternalMessageInfo

func (m *FaceRepo) GetRepoId() string {
	if m != nil {
		return m.RepoId
	}
	return ""
}

func (m *FaceRepo) GetRepoName() string {
	if m != nil {
		return m.RepoName
	}
	return ""
}

func (m *FaceRepo) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *FaceRepo) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *FaceRepo) GetPicCount() int32 {
	if m != nil {
		return m.PicCount
	}
	return 0
}

func (m *FaceRepo) GetNameListAttr() int32 {
	if m != nil {
		return m.NameListAttr
	}
	return 0
}

func (m *FaceRepo) GetStatus() TaskStatus {
	if m != nil {
		return m.Status
	}
	return TaskStatus_Task_Status_Unknown
}

type FaceRepoResult struct {
	AllSize              int32       `protobuf:"varint,1,opt,name=AllSize,proto3" json:"AllSize,omitempty"`
	ReturnedSize         int32       `protobuf:"varint,2,opt,name=ReturnedSize,proto3" json:"ReturnedSize,omitempty"`
	FaceRepos            []*FaceRepo `protobuf:"bytes,3,rep,name=FaceRepos,proto3" json:"FaceRepos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *FaceRepoResult) Reset()         { *m = FaceRepoResult{} }
func (m *FaceRepoResult) String() string { return proto.CompactTextString(m) }
func (*FaceRepoResult) ProtoMessage()    {}
func (*FaceRepoResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_face_4e3499fa32a7ad2b, []int{6}
}
func (m *FaceRepoResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FaceRepoResult.Unmarshal(m, b)
}
func (m *FaceRepoResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FaceRepoResult.Marshal(b, m, deterministic)
}
func (dst *FaceRepoResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FaceRepoResult.Merge(dst, src)
}
func (m *FaceRepoResult) XXX_Size() int {
	return xxx_messageInfo_FaceRepoResult.Size(m)
}
func (m *FaceRepoResult) XXX_DiscardUnknown() {
	xxx_messageInfo_FaceRepoResult.DiscardUnknown(m)
}

var xxx_messageInfo_FaceRepoResult proto.InternalMessageInfo

func (m *FaceRepoResult) GetAllSize() int32 {
	if m != nil {
		return m.AllSize
	}
	return 0
}

func (m *FaceRepoResult) GetReturnedSize() int32 {
	if m != nil {
		return m.ReturnedSize
	}
	return 0
}

func (m *FaceRepoResult) GetFaceRepos() []*FaceRepo {
	if m != nil {
		return m.FaceRepos
	}
	return nil
}

type RegisteredFace struct {
	CivilId              string         `protobuf:"bytes,1,opt,name=CivilId,proto3" json:"CivilId,omitempty"`
	Timestamp            int64          `protobuf:"varint,2,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	FaceRepoId           string         `protobuf:"bytes,3,opt,name=FaceRepoId,proto3" json:"FaceRepoId,omitempty"`
	FaceRepoName         string         `protobuf:"bytes,4,opt,name=FaceRepoName,proto3" json:"FaceRepoName,omitempty"`
	Confidence           float32        `protobuf:"fixed32,5,opt,name=Confidence,proto3" json:"Confidence,omitempty"`
	NameListAttr         int32          `protobuf:"varint,6,opt,name=NameListAttr,proto3" json:"NameListAttr,omitempty"`
	CivilAttr            *CivilAttr     `protobuf:"bytes,8,opt,name=CivilAttr,proto3" json:"CivilAttr,omitempty"`
	ImageResults         []*ImageResult `protobuf:"bytes,9,rep,name=ImageResults,proto3" json:"ImageResults,omitempty"`
	Status               TaskStatus     `protobuf:"varint,99,opt,name=Status,proto3,enum=TaskStatus" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RegisteredFace) Reset()         { *m = RegisteredFace{} }
func (m *RegisteredFace) String() string { return proto.CompactTextString(m) }
func (*RegisteredFace) ProtoMessage()    {}
func (*RegisteredFace) Descriptor() ([]byte, []int) {
	return fileDescriptor_face_4e3499fa32a7ad2b, []int{7}
}
func (m *RegisteredFace) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisteredFace.Unmarshal(m, b)
}
func (m *RegisteredFace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisteredFace.Marshal(b, m, deterministic)
}
func (dst *RegisteredFace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisteredFace.Merge(dst, src)
}
func (m *RegisteredFace) XXX_Size() int {
	return xxx_messageInfo_RegisteredFace.Size(m)
}
func (m *RegisteredFace) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisteredFace.DiscardUnknown(m)
}

var xxx_messageInfo_RegisteredFace proto.InternalMessageInfo

func (m *RegisteredFace) GetCivilId() string {
	if m != nil {
		return m.CivilId
	}
	return ""
}

func (m *RegisteredFace) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *RegisteredFace) GetFaceRepoId() string {
	if m != nil {
		return m.FaceRepoId
	}
	return ""
}

func (m *RegisteredFace) GetFaceRepoName() string {
	if m != nil {
		return m.FaceRepoName
	}
	return ""
}

func (m *RegisteredFace) GetConfidence() float32 {
	if m != nil {
		return m.Confidence
	}
	return 0
}

func (m *RegisteredFace) GetNameListAttr() int32 {
	if m != nil {
		return m.NameListAttr
	}
	return 0
}

func (m *RegisteredFace) GetCivilAttr() *CivilAttr {
	if m != nil {
		return m.CivilAttr
	}
	return nil
}

func (m *RegisteredFace) GetImageResults() []*ImageResult {
	if m != nil {
		return m.ImageResults
	}
	return nil
}

func (m *RegisteredFace) GetStatus() TaskStatus {
	if m != nil {
		return m.Status
	}
	return TaskStatus_Task_Status_Unknown
}

type RegisteredFaceResult struct {
	AllSize              int32             `protobuf:"varint,1,opt,name=AllSize,proto3" json:"AllSize,omitempty"`
	ReturnedSize         int32             `protobuf:"varint,2,opt,name=ReturnedSize,proto3" json:"ReturnedSize,omitempty"`
	RegisteredFaces      []*RegisteredFace `protobuf:"bytes,3,rep,name=RegisteredFaces,proto3" json:"RegisteredFaces,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RegisteredFaceResult) Reset()         { *m = RegisteredFaceResult{} }
func (m *RegisteredFaceResult) String() string { return proto.CompactTextString(m) }
func (*RegisteredFaceResult) ProtoMessage()    {}
func (*RegisteredFaceResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_face_4e3499fa32a7ad2b, []int{8}
}
func (m *RegisteredFaceResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisteredFaceResult.Unmarshal(m, b)
}
func (m *RegisteredFaceResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisteredFaceResult.Marshal(b, m, deterministic)
}
func (dst *RegisteredFaceResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisteredFaceResult.Merge(dst, src)
}
func (m *RegisteredFaceResult) XXX_Size() int {
	return xxx_messageInfo_RegisteredFaceResult.Size(m)
}
func (m *RegisteredFaceResult) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisteredFaceResult.DiscardUnknown(m)
}

var xxx_messageInfo_RegisteredFaceResult proto.InternalMessageInfo

func (m *RegisteredFaceResult) GetAllSize() int32 {
	if m != nil {
		return m.AllSize
	}
	return 0
}

func (m *RegisteredFaceResult) GetReturnedSize() int32 {
	if m != nil {
		return m.ReturnedSize
	}
	return 0
}

func (m *RegisteredFaceResult) GetRegisteredFaces() []*RegisteredFace {
	if m != nil {
		return m.RegisteredFaces
	}
	return nil
}

type WarnedFace struct {
	EventId         string       `protobuf:"bytes,1,opt,name=EventId,proto3" json:"EventId,omitempty"`
	EventReId       string       `protobuf:"bytes,2,opt,name=EventReId,proto3" json:"EventReId,omitempty"`
	Timestamp       int64        `protobuf:"varint,3,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	SensorId        string       `protobuf:"bytes,4,opt,name=SensorId,proto3" json:"SensorId,omitempty"`
	SensorName      string       `protobuf:"bytes,5,opt,name=SensorName,proto3" json:"SensorName,omitempty"`
	FaceRepoId      string       `protobuf:"bytes,8,opt,name=FaceRepoId,proto3" json:"FaceRepoId,omitempty"`
	FaceRepoName    string       `protobuf:"bytes,9,opt,name=FaceRepoName,proto3" json:"FaceRepoName,omitempty"`
	NameListAttr    int32        `protobuf:"varint,10,opt,name=NameListAttr,proto3" json:"NameListAttr,omitempty"`
	FaceId          string       `protobuf:"bytes,16,opt,name=FaceId,proto3" json:"FaceId,omitempty"`
	FaceReId        string       `protobuf:"bytes,17,opt,name=FaceReId,proto3" json:"FaceReId,omitempty"`
	CapturedImage   *ImageResult `protobuf:"bytes,18,opt,name=CapturedImage,proto3" json:"CapturedImage,omitempty"`
	CivilId         string       `protobuf:"bytes,32,opt,name=CivilId,proto3" json:"CivilId,omitempty"`
	CivilAttr       *CivilAttr   `protobuf:"bytes,33,opt,name=CivilAttr,proto3" json:"CivilAttr,omitempty"`
	RegisteredImage *ImageResult `protobuf:"bytes,34,opt,name=RegisteredImage,proto3" json:"RegisteredImage,omitempty"`
	RuleId          string       `protobuf:"bytes,64,opt,name=RuleId,proto3" json:"RuleId,omitempty"`
	Rule            string       `protobuf:"bytes,65,opt,name=Rule,proto3" json:"Rule,omitempty"`
	Confidence      float32      `protobuf:"fixed32,80,opt,name=Confidence,proto3" json:"Confidence,omitempty"`
	IsChecked       int32        `protobuf:"varint,81,opt,name=IsChecked,proto3" json:"IsChecked,omitempty"`
	Comment         string       `protobuf:"bytes,82,opt,name=Comment,proto3" json:"Comment,omitempty"`
	UserIds         string       `protobuf:"bytes,83,opt,name=UserIds,proto3" json:"UserIds,omitempty"`
	// 该抓拍人脸的质量
	QualityParams *FaceQuality `protobuf:"bytes,20,opt,name=QualityParams,proto3" json:"QualityParams,omitempty"`
	// 数据库状态
	Status               TaskStatus `protobuf:"varint,99,opt,name=Status,proto3,enum=TaskStatus" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *WarnedFace) Reset()         { *m = WarnedFace{} }
func (m *WarnedFace) String() string { return proto.CompactTextString(m) }
func (*WarnedFace) ProtoMessage()    {}
func (*WarnedFace) Descriptor() ([]byte, []int) {
	return fileDescriptor_face_4e3499fa32a7ad2b, []int{9}
}
func (m *WarnedFace) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WarnedFace.Unmarshal(m, b)
}
func (m *WarnedFace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WarnedFace.Marshal(b, m, deterministic)
}
func (dst *WarnedFace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WarnedFace.Merge(dst, src)
}
func (m *WarnedFace) XXX_Size() int {
	return xxx_messageInfo_WarnedFace.Size(m)
}
func (m *WarnedFace) XXX_DiscardUnknown() {
	xxx_messageInfo_WarnedFace.DiscardUnknown(m)
}

var xxx_messageInfo_WarnedFace proto.InternalMessageInfo

func (m *WarnedFace) GetEventId() string {
	if m != nil {
		return m.EventId
	}
	return ""
}

func (m *WarnedFace) GetEventReId() string {
	if m != nil {
		return m.EventReId
	}
	return ""
}

func (m *WarnedFace) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *WarnedFace) GetSensorId() string {
	if m != nil {
		return m.SensorId
	}
	return ""
}

func (m *WarnedFace) GetSensorName() string {
	if m != nil {
		return m.SensorName
	}
	return ""
}

func (m *WarnedFace) GetFaceRepoId() string {
	if m != nil {
		return m.FaceRepoId
	}
	return ""
}

func (m *WarnedFace) GetFaceRepoName() string {
	if m != nil {
		return m.FaceRepoName
	}
	return ""
}

func (m *WarnedFace) GetNameListAttr() int32 {
	if m != nil {
		return m.NameListAttr
	}
	return 0
}

func (m *WarnedFace) GetFaceId() string {
	if m != nil {
		return m.FaceId
	}
	return ""
}

func (m *WarnedFace) GetFaceReId() string {
	if m != nil {
		return m.FaceReId
	}
	return ""
}

func (m *WarnedFace) GetCapturedImage() *ImageResult {
	if m != nil {
		return m.CapturedImage
	}
	return nil
}

func (m *WarnedFace) GetCivilId() string {
	if m != nil {
		return m.CivilId
	}
	return ""
}

func (m *WarnedFace) GetCivilAttr() *CivilAttr {
	if m != nil {
		return m.CivilAttr
	}
	return nil
}

func (m *WarnedFace) GetRegisteredImage() *ImageResult {
	if m != nil {
		return m.RegisteredImage
	}
	return nil
}

func (m *WarnedFace) GetRuleId() string {
	if m != nil {
		return m.RuleId
	}
	return ""
}

func (m *WarnedFace) GetRule() string {
	if m != nil {
		return m.Rule
	}
	return ""
}

func (m *WarnedFace) GetConfidence() float32 {
	if m != nil {
		return m.Confidence
	}
	return 0
}

func (m *WarnedFace) GetIsChecked() int32 {
	if m != nil {
		return m.IsChecked
	}
	return 0
}

func (m *WarnedFace) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *WarnedFace) GetUserIds() string {
	if m != nil {
		return m.UserIds
	}
	return ""
}

func (m *WarnedFace) GetQualityParams() *FaceQuality {
	if m != nil {
		return m.QualityParams
	}
	return nil
}

func (m *WarnedFace) GetStatus() TaskStatus {
	if m != nil {
		return m.Status
	}
	return TaskStatus_Task_Status_Unknown
}

type WarnedFaceResult struct {
	AllSize              int32         `protobuf:"varint,1,opt,name=AllSize,proto3" json:"AllSize,omitempty"`
	ReturnedSize         int32         `protobuf:"varint,2,opt,name=ReturnedSize,proto3" json:"ReturnedSize,omitempty"`
	WarnedFaces          []*WarnedFace `protobuf:"bytes,3,rep,name=WarnedFaces,proto3" json:"WarnedFaces,omitempty"`
	ReId                 string        `protobuf:"bytes,4,opt,name=ReId,proto3" json:"ReId,omitempty"`
	IsInform             int32         `protobuf:"varint,5,opt,name=IsInform,proto3" json:"IsInform,omitempty"`
	FaceId               string        `protobuf:"bytes,6,opt,name=FaceId,proto3" json:"FaceId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *WarnedFaceResult) Reset()         { *m = WarnedFaceResult{} }
func (m *WarnedFaceResult) String() string { return proto.CompactTextString(m) }
func (*WarnedFaceResult) ProtoMessage()    {}
func (*WarnedFaceResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_face_4e3499fa32a7ad2b, []int{10}
}
func (m *WarnedFaceResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WarnedFaceResult.Unmarshal(m, b)
}
func (m *WarnedFaceResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WarnedFaceResult.Marshal(b, m, deterministic)
}
func (dst *WarnedFaceResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WarnedFaceResult.Merge(dst, src)
}
func (m *WarnedFaceResult) XXX_Size() int {
	return xxx_messageInfo_WarnedFaceResult.Size(m)
}
func (m *WarnedFaceResult) XXX_DiscardUnknown() {
	xxx_messageInfo_WarnedFaceResult.DiscardUnknown(m)
}

var xxx_messageInfo_WarnedFaceResult proto.InternalMessageInfo

func (m *WarnedFaceResult) GetAllSize() int32 {
	if m != nil {
		return m.AllSize
	}
	return 0
}

func (m *WarnedFaceResult) GetReturnedSize() int32 {
	if m != nil {
		return m.ReturnedSize
	}
	return 0
}

func (m *WarnedFaceResult) GetWarnedFaces() []*WarnedFace {
	if m != nil {
		return m.WarnedFaces
	}
	return nil
}

func (m *WarnedFaceResult) GetReId() string {
	if m != nil {
		return m.ReId
	}
	return ""
}

func (m *WarnedFaceResult) GetIsInform() int32 {
	if m != nil {
		return m.IsInform
	}
	return 0
}

func (m *WarnedFaceResult) GetFaceId() string {
	if m != nil {
		return m.FaceId
	}
	return ""
}

func init() {
	proto.RegisterType((*CivilAttr)(nil), "CivilAttr")
	proto.RegisterType((*ImageResult)(nil), "ImageResult")
	proto.RegisterType((*CapturedFace)(nil), "CapturedFace")
	proto.RegisterType((*FaceQuality)(nil), "FaceQuality")
	proto.RegisterType((*CapturedFaceResult)(nil), "CapturedFaceResult")
	proto.RegisterType((*FaceRepo)(nil), "FaceRepo")
	proto.RegisterType((*FaceRepoResult)(nil), "FaceRepoResult")
	proto.RegisterType((*RegisteredFace)(nil), "RegisteredFace")
	proto.RegisterType((*RegisteredFaceResult)(nil), "RegisteredFaceResult")
	proto.RegisterType((*WarnedFace)(nil), "WarnedFace")
	proto.RegisterType((*WarnedFaceResult)(nil), "WarnedFaceResult")
	proto.RegisterEnum("IdType", IdType_name, IdType_value)
}

func init() { proto.RegisterFile("face.proto", fileDescriptor_face_4e3499fa32a7ad2b) }

var fileDescriptor_face_4e3499fa32a7ad2b = []byte{
	// 1371 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0x5f, 0x6f, 0x1b, 0x45,
	0x10, 0xc7, 0x76, 0xec, 0xc4, 0xe3, 0xfc, 0x71, 0xb6, 0xa1, 0x3a, 0x55, 0xa8, 0x75, 0x0d, 0x02,
	0xab, 0x82, 0x13, 0x4a, 0x11, 0x12, 0x6f, 0x38, 0x2e, 0x4d, 0x4e, 0xa0, 0x36, 0xbd, 0xa4, 0x2a,
	0x7d, 0x8a, 0x36, 0xde, 0x8d, 0x73, 0xea, 0xfd, 0xb1, 0xee, 0xd6, 0xad, 0xc2, 0x17, 0xe8, 0x03,
	0x0f, 0x88, 0xaf, 0xc2, 0x97, 0x40, 0x3c, 0xf2, 0xcc, 0x13, 0xdf, 0x04, 0xcd, 0xec, 0xee, 0x79,
	0xef, 0xdc, 0xd2, 0x3c, 0xb4, 0x4f, 0x9e, 0xdf, 0x6f, 0xf6, 0x9f, 0x67, 0x7e, 0x33, 0x63, 0x03,
	0x5c, 0xf0, 0xa9, 0xf4, 0xe7, 0x79, 0xa6, 0xb2, 0x5b, 0x20, 0xd3, 0x45, 0xa2, 0xed, 0xe1, 0xef,
	0x6d, 0xe8, 0x4e, 0xa2, 0x97, 0x51, 0x3c, 0x56, 0x2a, 0x67, 0x0c, 0xd6, 0x1e, 0xf1, 0x44, 0x7a,
	0x8d, 0x41, 0x63, 0xd4, 0x0d, 0xc9, 0x66, 0x77, 0xa0, 0x13, 0x88, 0xd3, 0xab, 0xb9, 0xf4, 0x9a,
	0x83, 0xc6, 0x68, 0x7b, 0x7f, 0xdd, 0xd7, 0x30, 0x34, 0x34, 0x6e, 0x0a, 0xc4, 0xa3, 0xcc, 0x6b,
	0xe9, 0x4d, 0x68, 0xb3, 0x5b, 0xb0, 0x71, 0x28, 0x53, 0x21, 0xf3, 0x40, 0x78, 0x6b, 0x83, 0xc6,
	0xa8, 0x1d, 0x96, 0x98, 0xdd, 0x83, 0xbe, 0xb6, 0x27, 0x59, 0x7a, 0x11, 0x09, 0x99, 0x4e, 0xa5,
	0xd7, 0x1e, 0x34, 0x46, 0xcd, 0x70, 0x85, 0x67, 0x7b, 0xd0, 0x1e, 0xcf, 0x64, 0x20, 0xbc, 0x0e,
	0x1d, 0xa2, 0x01, 0xfb, 0x0c, 0xb6, 0xc6, 0x33, 0xe9, 0x6c, 0x5f, 0xa7, 0xed, 0x55, 0x12, 0xdf,
	0xf0, 0x88, 0xab, 0x28, 0x4b, 0x03, 0xe1, 0x6d, 0xe8, 0x37, 0x58, 0x8c, 0x6f, 0xd0, 0xb6, 0x73,
	0x48, 0x57, 0xbf, 0xa1, 0xce, 0x33, 0x0f, 0xd6, 0x0f, 0x63, 0x5e, 0x14, 0x81, 0xf0, 0x80, 0x8e,
	0xb1, 0x90, 0x8d, 0x60, 0x87, 0x4c, 0xe7, 0x90, 0x1e, 0x1d, 0x52, 0xa7, 0x31, 0x46, 0x63, 0x21,
	0x72, 0x6f, 0x53, 0xc7, 0x08, 0x6d, 0x7c, 0xdf, 0x41, 0x94, 0xab, 0x4b, 0xc1, 0xaf, 0xbc, 0x2d,
	0xe2, 0x4b, 0x8c, 0x77, 0x4e, 0xb2, 0x24, 0x91, 0xa9, 0xf2, 0xb6, 0xc9, 0x65, 0x21, 0x46, 0xe4,
	0x88, 0xab, 0x40, 0x78, 0x3b, 0x3a, 0x22, 0x04, 0x30, 0x22, 0x47, 0x5c, 0x39, 0xef, 0xe8, 0xeb,
	0x88, 0x54, 0x48, 0x36, 0x80, 0x5e, 0x99, 0xeb, 0x40, 0x78, 0xbb, 0x74, 0xb2, 0x4b, 0xe1, 0x9b,
	0x8e, 0x64, 0x9c, 0x48, 0xbc, 0x80, 0xe9, 0x98, 0x59, 0x8c, 0x31, 0xd3, 0xb6, 0x73, 0xcd, 0x0d,
	0x1d, 0xb3, 0x3a, 0xcf, 0x3e, 0x85, 0xce, 0x89, 0xe2, 0x6a, 0x51, 0x78, 0xe7, 0x24, 0x9a, 0x9e,
	0x7f, 0xca, 0x8b, 0x17, 0x9a, 0x0a, 0x8d, 0x8b, 0xdd, 0x84, 0x8e, 0x79, 0xc9, 0x94, 0x5e, 0x62,
	0xd0, 0xf0, 0x8f, 0x35, 0xe8, 0x05, 0x09, 0x9f, 0xc9, 0x50, 0x16, 0x8b, 0x58, 0xe1, 0xa3, 0x08,
	0x3e, 0xcd, 0x23, 0xa3, 0xcc, 0x12, 0xb3, 0x2f, 0x61, 0xf7, 0xf4, 0x72, 0x91, 0x9c, 0xa7, 0x3c,
	0x8a, 0xcb, 0x45, 0x4d, 0x5a, 0xb4, 0xea, 0xc0, 0xaf, 0x30, 0x59, 0xa8, 0xf3, 0x8c, 0xe7, 0xa2,
	0x5c, 0xac, 0x65, 0xbb, 0xc2, 0xb3, 0x4f, 0xa0, 0x6b, 0xb9, 0x9f, 0x8d, 0x86, 0x97, 0x84, 0xeb,
	0x7d, 0x4e, 0xea, 0x75, 0xbc, 0xcf, 0x31, 0x1d, 0x16, 0x3c, 0x8b, 0x84, 0xba, 0x34, 0xf2, 0xad,
	0x92, 0xec, 0x73, 0xd8, 0xb6, 0xc4, 0x91, 0x8c, 0x66, 0x97, 0x8a, 0x74, 0xdc, 0x0e, 0x6b, 0xac,
	0xfb, 0xea, 0x50, 0x16, 0xfa, 0x40, 0x2d, 0xe8, 0x15, 0x1e, 0xe3, 0xe1, 0x70, 0xe6, 0xd8, 0x2e,
	0x2d, 0x5e, 0x75, 0xa0, 0xcc, 0x0e, 0xa2, 0xf4, 0x01, 0x57, 0x9c, 0x04, 0xd3, 0x0d, 0x2d, 0x44,
	0xcf, 0x43, 0xc9, 0xd5, 0x22, 0x97, 0x46, 0x26, 0x16, 0x52, 0x36, 0x8a, 0x90, 0xa7, 0x2f, 0x64,
	0x29, 0x11, 0x8b, 0x31, 0x2a, 0x4f, 0x16, 0x3c, 0x8e, 0xd4, 0xd5, 0xe3, 0x1f, 0x49, 0x1b, 0x1b,
	0xe1, 0x92, 0xb8, 0x9e, 0x28, 0x3c, 0x58, 0xa7, 0x14, 0x94, 0xaa, 0xb0, 0x10, 0x0f, 0x27, 0x93,
	0x7a, 0x91, 0xd0, 0x21, 0x2f, 0x89, 0xe1, 0xaf, 0x2d, 0xd8, 0x9c, 0xf0, 0x39, 0x3e, 0x51, 0x3c,
	0xe4, 0x53, 0x89, 0xea, 0xc2, 0xcf, 0x40, 0x18, 0xcd, 0x18, 0x84, 0xef, 0x47, 0x2b, 0x44, 0x8f,
	0x16, 0x4a, 0x89, 0xf1, 0x8a, 0xd3, 0x28, 0x91, 0x85, 0xe2, 0xc9, 0x9c, 0x84, 0xd1, 0x0a, 0x97,
	0x04, 0xee, 0x3c, 0x91, 0x69, 0x91, 0xd9, 0xa6, 0xd6, 0x0d, 0x4b, 0xcc, 0x6e, 0x03, 0x68, 0x9b,
	0xfa, 0x67, 0x9b, 0xbc, 0x0e, 0x83, 0x7e, 0xa7, 0x6c, 0x3a, 0x54, 0x36, 0x50, 0x6d, 0x56, 0x41,
	0xf1, 0x8c, 0xe7, 0xa9, 0x14, 0x46, 0x05, 0x25, 0x66, 0x23, 0xa7, 0x45, 0x53, 0xe2, 0x7b, 0xfb,
	0xe0, 0x97, 0x4c, 0xe8, 0xf4, 0x6f, 0xbf, 0x52, 0x38, 0x94, 0xf7, 0xde, 0xfe, 0xa6, 0xef, 0x70,
	0x61, 0xa5, 0xb2, 0xf6, 0x61, 0xcb, 0xa4, 0xe7, 0x98, 0xe7, 0x3c, 0x29, 0xbc, 0x3d, 0xb3, 0x03,
	0x23, 0x62, 0x3c, 0x61, 0x75, 0x89, 0x93, 0xc5, 0xe9, 0x5b, 0xb3, 0x38, 0xfc, 0xab, 0x09, 0x3d,
	0xe7, 0x0c, 0xfc, 0xfa, 0xe3, 0x38, 0x9a, 0xa5, 0x27, 0xd3, 0x2c, 0xd7, 0xe3, 0xa5, 0x19, 0x3a,
	0x0c, 0xfb, 0x06, 0x6e, 0x2e, 0xd1, 0xd9, 0xe1, 0xd9, 0x45, 0x9e, 0xa5, 0x0a, 0x47, 0x16, 0xa5,
	0xa8, 0x19, 0xee, 0x2d, 0xbd, 0x87, 0x0f, 0xad, 0x8f, 0xf9, 0x70, 0xa3, 0xb2, 0x2b, 0x2a, 0x68,
	0x4b, 0x8b, 0xb6, 0xec, 0x3a, 0x5b, 0x02, 0x72, 0x50, 0xc3, 0x29, 0xe6, 0x72, 0xaa, 0x28, 0x7d,
	0xcd, 0xd0, 0x20, 0xec, 0xce, 0x07, 0xf1, 0x22, 0x37, 0x53, 0x88, 0x6c, 0x5c, 0x7b, 0x90, 0xe5,
	0x42, 0xe6, 0x26, 0x59, 0x06, 0x61, 0x0f, 0x7d, 0x20, 0x95, 0x9c, 0x2a, 0xfd, 0x55, 0xf4, 0xe4,
	0x71, 0x29, 0xec, 0xd0, 0xc7, 0x91, 0x9a, 0xea, 0x1a, 0x6d, 0x86, 0x1a, 0xe0, 0x1d, 0x61, 0x16,
	0xc7, 0x66, 0xca, 0x90, 0x8d, 0xdc, 0x49, 0xf4, 0x8b, 0xa4, 0xb1, 0xd2, 0x0c, 0xc9, 0x66, 0x7d,
	0x68, 0x3d, 0xe7, 0xaf, 0xcc, 0x1c, 0x41, 0x73, 0xf8, 0xba, 0x01, 0xcc, 0x55, 0xb6, 0xc9, 0x9d,
	0x07, 0xeb, 0xe3, 0x38, 0xa6, 0xfd, 0x0d, 0x3d, 0x96, 0x0c, 0x64, 0x43, 0xd8, 0x0c, 0xa5, 0x5a,
	0xa0, 0x76, 0xc8, 0xdd, 0x24, 0x77, 0x85, 0x63, 0xf7, 0x61, 0xcb, 0x3d, 0xb3, 0xf0, 0x5a, 0x83,
	0xd6, 0xa8, 0xb7, 0xbf, 0xe5, 0x57, 0x6e, 0xaa, 0xae, 0x19, 0xfe, 0xd3, 0xb0, 0xb5, 0x33, 0xcf,
	0x30, 0x40, 0xf8, 0xb9, 0xac, 0x2f, 0x8d, 0x50, 0xc9, 0x68, 0x51, 0x1d, 0x98, 0xfa, 0xb2, 0xf8,
	0x1d, 0xf5, 0xe5, 0x0c, 0xbd, 0xb5, 0xea, 0xd0, 0xbb, 0x05, 0x1b, 0xc7, 0xd1, 0x74, 0x92, 0x2d,
	0x52, 0x65, 0x9a, 0x6d, 0x89, 0xf1, 0xdb, 0xe2, 0xd9, 0x3f, 0x45, 0x85, 0xa2, 0x02, 0xd1, 0xad,
	0xb6, 0xc2, 0x5d, 0x4f, 0xb3, 0xaf, 0x60, 0xdb, 0x7e, 0xb9, 0xf7, 0x12, 0xe2, 0x2f, 0xa0, 0x6b,
	0xcf, 0xb3, 0xe1, 0xed, 0xfa, 0xe5, 0x0d, 0x4b, 0xdf, 0xf0, 0xef, 0x26, 0x6c, 0x87, 0x72, 0x16,
	0x15, 0x4a, 0xda, 0xe6, 0x85, 0xa1, 0xc0, 0xaa, 0x2e, 0xa3, 0x6b, 0x61, 0x35, 0x84, 0xcd, 0x7a,
	0x08, 0x6f, 0x03, 0xd8, 0x73, 0x03, 0x61, 0x46, 0x9b, 0xc3, 0xe0, 0xbb, 0x2d, 0xa2, 0x04, 0xe9,
	0x38, 0x57, 0xb8, 0x5a, 0xab, 0x6a, 0xaf, 0xb4, 0xaa, 0xeb, 0x04, 0xfc, 0xfa, 0x2d, 0xeb, 0x6b,
	0xd8, 0x74, 0x3a, 0x52, 0xe1, 0x75, 0x29, 0x50, 0xd5, 0x9e, 0x55, 0x59, 0x71, 0xbd, 0x64, 0xfe,
	0xd6, 0x80, 0xbd, 0x6a, 0x4c, 0xdf, 0x4b, 0x4e, 0xbf, 0x83, 0x9d, 0xea, 0xa9, 0x36, 0xb3, 0x3b,
	0x7e, 0xed, 0xb6, 0xfa, 0xba, 0xe1, 0xbf, 0x6d, 0x00, 0xdd, 0xd0, 0x6d, 0x86, 0x7f, 0x78, 0x29,
	0x53, 0xb5, 0xcc, 0xb0, 0x81, 0x98, 0x61, 0x32, 0x9d, 0x09, 0xb5, 0x24, 0x3e, 0xec, 0x88, 0x72,
	0xb4, 0xb3, 0xf1, 0x4e, 0xed, 0x74, 0xdf, 0xa0, 0x9d, 0xba, 0x36, 0xe0, 0x0d, 0xda, 0x58, 0x0e,
	0xe6, 0xfe, 0x5b, 0x07, 0xf3, 0x6e, 0x6d, 0x30, 0xef, 0x2f, 0xdb, 0x15, 0x69, 0x81, 0x7e, 0x79,
	0xd4, 0x65, 0x52, 0x5d, 0xe2, 0xd6, 0xd0, 0xa0, 0x5a, 0x43, 0x15, 0x75, 0xde, 0xfd, 0x3f, 0x75,
	0x7e, 0xeb, 0xe6, 0x5b, 0xdf, 0x3c, 0x7c, 0xc3, 0xcd, 0xf5, 0x45, 0xd4, 0x1c, 0x17, 0x31, 0x7e,
	0x93, 0xef, 0x4d, 0x73, 0x24, 0x44, 0x53, 0x60, 0x11, 0x4b, 0x6f, 0xac, 0xff, 0x07, 0xa0, 0x5d,
	0xab, 0xb7, 0xe3, 0x95, 0x7a, 0xc3, 0xdf, 0x3d, 0xc5, 0xe4, 0x52, 0x4e, 0xf1, 0x17, 0xd7, 0x13,
	0xf3, 0xbb, 0xc7, 0x12, 0x6e, 0xd3, 0x0c, 0xab, 0x4d, 0xd3, 0x83, 0xf5, 0xa7, 0x05, 0xfe, 0xe3,
	0x2a, 0xbc, 0x13, 0xed, 0x31, 0xf0, 0xc3, 0x8d, 0xfd, 0x3f, 0x1b, 0xd0, 0x5f, 0x6a, 0xfc, 0xbd,
	0x54, 0xdc, 0x57, 0xd0, 0x5b, 0x9e, 0x68, 0xab, 0xad, 0xe7, 0x3b, 0xb7, 0xb8, 0x7e, 0x0a, 0xb0,
	0x2c, 0xc5, 0x4f, 0xb6, 0xfe, 0x6d, 0x15, 0xa4, 0x17, 0x59, 0x9e, 0xd8, 0xe9, 0x61, 0xb1, 0x23,
	0xc6, 0x8e, 0x2b, 0xc6, 0x7b, 0xaf, 0x1b, 0xf6, 0x6f, 0x2f, 0xbb, 0x01, 0x3b, 0x81, 0x38, 0x43,
	0xf3, 0xec, 0x69, 0xfa, 0x22, 0xcd, 0x5e, 0xa5, 0xfd, 0x8f, 0x58, 0x1f, 0x36, 0x2d, 0x89, 0x7f,
	0x78, 0xfb, 0x0d, 0xb6, 0x07, 0x7d, 0xcb, 0x1c, 0xf3, 0xa2, 0x98, 0x67, 0xb9, 0xea, 0x37, 0xdd,
	0xcd, 0x8f, 0x2f, 0x2e, 0xa2, 0xa9, 0xcc, 0xfb, 0x2d, 0x77, 0xe9, 0x89, 0xcc, 0x67, 0x92, 0xa7,
	0xaa, 0xbf, 0xc6, 0x3e, 0x86, 0x5d, 0xcb, 0x9e, 0xca, 0x64, 0x9e, 0xe5, 0x3c, 0xbf, 0xea, 0xb7,
	0x0f, 0xee, 0xc2, 0x9d, 0x69, 0x96, 0xf8, 0x42, 0xca, 0xf9, 0x2c, 0x8e, 0x52, 0x45, 0x96, 0xe0,
	0x8a, 0xfb, 0x62, 0xe6, 0x27, 0x99, 0x90, 0xf1, 0x79, 0x87, 0xfe, 0xcb, 0xdf, 0xff, 0x2f, 0x00,
	0x00, 0xff, 0xff, 0x51, 0x50, 0xfa, 0xec, 0xe5, 0x0f, 0x00, 0x00,
}
