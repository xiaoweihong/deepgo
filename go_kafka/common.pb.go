// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

package go_kafka

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// -默认全部，包括向上、向下、向左、向右、左上、左下、右上、右下；以目标出现在视频中到消失，叠加每两帧之间的运动方向向量，作为最后的运动方向。每个方向前后偏离22.5°归为此方向
type CutboardDirection int32

const (
	// -方向未知
	CutboardDirection_CUTBOARD_DIRECTION_UNKNOWN CutboardDirection = 0
	// -方向向上
	CutboardDirection_CUTBOARD_DIRECTION_UPWARD CutboardDirection = 1
	// -方向向下
	CutboardDirection_CUTBOARD_DIRECTION_DOWN CutboardDirection = 2
	// -方向向左
	CutboardDirection_CUTBOARD_DIRECTION_LEFT CutboardDirection = 3
	// -方向向右
	CutboardDirection_CUTBOARD_DIRECTION_RIGHT CutboardDirection = 4
	// -方向左上
	CutboardDirection_CUTBOARD_DIRECTION_LEFT_UPWARD CutboardDirection = 5
	// -方向左下
	CutboardDirection_CUTBOARD_DIRECTION_LEFT_DOWN CutboardDirection = 6
	// -方向右上
	CutboardDirection_CUTBOARD_DIRECTION_RIGHT_UPWARD CutboardDirection = 7
	// -方向右下
	CutboardDirection_CUTBOARD_DIRECTION_RIGHT_DOWN CutboardDirection = 8
)

var CutboardDirection_name = map[int32]string{
	0: "CUTBOARD_DIRECTION_UNKNOWN",
	1: "CUTBOARD_DIRECTION_UPWARD",
	2: "CUTBOARD_DIRECTION_DOWN",
	3: "CUTBOARD_DIRECTION_LEFT",
	4: "CUTBOARD_DIRECTION_RIGHT",
	5: "CUTBOARD_DIRECTION_LEFT_UPWARD",
	6: "CUTBOARD_DIRECTION_LEFT_DOWN",
	7: "CUTBOARD_DIRECTION_RIGHT_UPWARD",
	8: "CUTBOARD_DIRECTION_RIGHT_DOWN",
}
var CutboardDirection_value = map[string]int32{
	"CUTBOARD_DIRECTION_UNKNOWN":      0,
	"CUTBOARD_DIRECTION_UPWARD":       1,
	"CUTBOARD_DIRECTION_DOWN":         2,
	"CUTBOARD_DIRECTION_LEFT":         3,
	"CUTBOARD_DIRECTION_RIGHT":        4,
	"CUTBOARD_DIRECTION_LEFT_UPWARD":  5,
	"CUTBOARD_DIRECTION_LEFT_DOWN":    6,
	"CUTBOARD_DIRECTION_RIGHT_UPWARD": 7,
	"CUTBOARD_DIRECTION_RIGHT_DOWN":   8,
}

func (x CutboardDirection) String() string {
	return proto.EnumName(CutboardDirection_name, int32(x))
}
func (CutboardDirection) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_common_cee8f00986763945, []int{0}
}

// -目标速度，快中慢
type CutboardSpeed int32

const (
	// -速度未知
	CutboardSpeed_CUTBOARD_SPEED_UNKNOWN CutboardSpeed = 0
	// -速度快
	CutboardSpeed_CUTBOARD_SPEED_HIGH CutboardSpeed = 1
	// -速度中
	CutboardSpeed_CUTBOARD_SPEED_NORMAL CutboardSpeed = 2
	// -速度慢
	CutboardSpeed_CUTBOARD_SPEED_SLOW CutboardSpeed = 3
)

var CutboardSpeed_name = map[int32]string{
	0: "CUTBOARD_SPEED_UNKNOWN",
	1: "CUTBOARD_SPEED_HIGH",
	2: "CUTBOARD_SPEED_NORMAL",
	3: "CUTBOARD_SPEED_SLOW",
}
var CutboardSpeed_value = map[string]int32{
	"CUTBOARD_SPEED_UNKNOWN": 0,
	"CUTBOARD_SPEED_HIGH":    1,
	"CUTBOARD_SPEED_NORMAL":  2,
	"CUTBOARD_SPEED_SLOW":    3,
}

func (x CutboardSpeed) String() string {
	return proto.EnumName(CutboardSpeed_name, int32(x))
}
func (CutboardSpeed) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_common_cee8f00986763945, []int{1}
}

// -目标类型
type ObjType int32

const (
	ObjType_OBJ_TYPE_UNKNOWN             ObjType = 0
	ObjType_OBJ_TYPE_CAR                 ObjType = 1
	ObjType_OBJ_TYPE_BICYCLE             ObjType = 2
	ObjType_OBJ_TYPE_TRICYCLE            ObjType = 3
	ObjType_OBJ_TYPE_PEDESTRIAN          ObjType = 4
	ObjType_OBJ_TYPE_FACE                ObjType = 1024
	ObjType_OBJ_TYPE_VEHICLE_VECTOR      ObjType = 2048
	ObjType_OBJ_TYPE_BICYCLE_VECTOR      ObjType = 2049
	ObjType_OBJ_TYPE_TRICYCLE_VECTOR     ObjType = 2050
	ObjType_OBJ_TYPE_PEDESTRIAN_VECTOR   ObjType = 2051
	ObjType_OBJ_TYPE_FACE_VECTOR         ObjType = 3072
	ObjType_OBJ_TYPE_VEHICLE_CUTBOARD    ObjType = 4096
	ObjType_OBJ_TYPE_BICYCLE_CUTBOARD    ObjType = 4097
	ObjType_OBJ_TYPE_TRICYCLE_CUTBOARD   ObjType = 4098
	ObjType_OBJ_TYPE_PEDESTRIAN_CUTBOARD ObjType = 4099
	ObjType_OBJ_TYPE_FACE_CUTBOARD       ObjType = 5120
	ObjType_OBJ_TYPE_ALL                 ObjType = 5555
)

var ObjType_name = map[int32]string{
	0:    "OBJ_TYPE_UNKNOWN",
	1:    "OBJ_TYPE_CAR",
	2:    "OBJ_TYPE_BICYCLE",
	3:    "OBJ_TYPE_TRICYCLE",
	4:    "OBJ_TYPE_PEDESTRIAN",
	1024: "OBJ_TYPE_FACE",
	2048: "OBJ_TYPE_VEHICLE_VECTOR",
	2049: "OBJ_TYPE_BICYCLE_VECTOR",
	2050: "OBJ_TYPE_TRICYCLE_VECTOR",
	2051: "OBJ_TYPE_PEDESTRIAN_VECTOR",
	3072: "OBJ_TYPE_FACE_VECTOR",
	4096: "OBJ_TYPE_VEHICLE_CUTBOARD",
	4097: "OBJ_TYPE_BICYCLE_CUTBOARD",
	4098: "OBJ_TYPE_TRICYCLE_CUTBOARD",
	4099: "OBJ_TYPE_PEDESTRIAN_CUTBOARD",
	5120: "OBJ_TYPE_FACE_CUTBOARD",
	5555: "OBJ_TYPE_ALL",
}
var ObjType_value = map[string]int32{
	"OBJ_TYPE_UNKNOWN":             0,
	"OBJ_TYPE_CAR":                 1,
	"OBJ_TYPE_BICYCLE":             2,
	"OBJ_TYPE_TRICYCLE":            3,
	"OBJ_TYPE_PEDESTRIAN":          4,
	"OBJ_TYPE_FACE":                1024,
	"OBJ_TYPE_VEHICLE_VECTOR":      2048,
	"OBJ_TYPE_BICYCLE_VECTOR":      2049,
	"OBJ_TYPE_TRICYCLE_VECTOR":     2050,
	"OBJ_TYPE_PEDESTRIAN_VECTOR":   2051,
	"OBJ_TYPE_FACE_VECTOR":         3072,
	"OBJ_TYPE_VEHICLE_CUTBOARD":    4096,
	"OBJ_TYPE_BICYCLE_CUTBOARD":    4097,
	"OBJ_TYPE_TRICYCLE_CUTBOARD":   4098,
	"OBJ_TYPE_PEDESTRIAN_CUTBOARD": 4099,
	"OBJ_TYPE_FACE_CUTBOARD":       5120,
	"OBJ_TYPE_ALL":                 5555,
}

func (x ObjType) String() string {
	return proto.EnumName(ObjType_name, int32(x))
}
func (ObjType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_common_cee8f00986763945, []int{2}
}

type DataFmtType int32

const (
	DataFmtType_UNKNOWNFMT DataFmtType = 0
	DataFmtType_JSON       DataFmtType = 1
	DataFmtType_PROTOBUF   DataFmtType = 2
	DataFmtType_CSV        DataFmtType = 3
	DataFmtType_PDF        DataFmtType = 4
)

var DataFmtType_name = map[int32]string{
	0: "UNKNOWNFMT",
	1: "JSON",
	2: "PROTOBUF",
	3: "CSV",
	4: "PDF",
}
var DataFmtType_value = map[string]int32{
	"UNKNOWNFMT": 0,
	"JSON":       1,
	"PROTOBUF":   2,
	"CSV":        3,
	"PDF":        4,
}

func (x DataFmtType) String() string {
	return proto.EnumName(DataFmtType_name, int32(x))
}
func (DataFmtType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_common_cee8f00986763945, []int{3}
}

// -对于某些属性，比如性别，其值只有两个，实际输出时增加unknown字段表示算法的不确定输出
type ThreeStatus int32

const (
	ThreeStatus_THREE_STATUS_FALSE   ThreeStatus = 0
	ThreeStatus_THREE_STATUS_TRUE    ThreeStatus = 1
	ThreeStatus_THREE_STATUS_UNKNOWN ThreeStatus = -1
)

var ThreeStatus_name = map[int32]string{
	0:  "THREE_STATUS_FALSE",
	1:  "THREE_STATUS_TRUE",
	-1: "THREE_STATUS_UNKNOWN",
}
var ThreeStatus_value = map[string]int32{
	"THREE_STATUS_FALSE":   0,
	"THREE_STATUS_TRUE":    1,
	"THREE_STATUS_UNKNOWN": -1,
}

func (x ThreeStatus) String() string {
	return proto.EnumName(ThreeStatus_name, int32(x))
}
func (ThreeStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_common_cee8f00986763945, []int{4}
}

type DBType int32

const (
	DBType_KAFKA     DBType = 0
	DBType_POSTGRES  DBType = 1
	DBType_FILEIMAGE DBType = 2
)

var DBType_name = map[int32]string{
	0: "KAFKA",
	1: "POSTGRES",
	2: "FILEIMAGE",
}
var DBType_value = map[string]int32{
	"KAFKA":     0,
	"POSTGRES":  1,
	"FILEIMAGE": 2,
}

func (x DBType) String() string {
	return proto.EnumName(DBType_name, int32(x))
}
func (DBType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_common_cee8f00986763945, []int{5}
}

type SrcMetadata struct {
	Timestamp            int64             `protobuf:"varint,1,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Duration             int32             `protobuf:"varint,2,opt,name=Duration,proto3" json:"Duration,omitempty"`
	SensorId             int32             `protobuf:"varint,3,opt,name=SensorId,proto3" json:"SensorId,omitempty"`
	SensorName           string            `protobuf:"bytes,4,opt,name=SensorName,proto3" json:"SensorName,omitempty"`
	SensorUrl            string            `protobuf:"bytes,5,opt,name=SensorUrl,proto3" json:"SensorUrl,omitempty"`
	RepoId               int32             `protobuf:"varint,6,opt,name=RepoId,proto3" json:"RepoId,omitempty"`
	RepoInfo             string            `protobuf:"bytes,7,opt,name=RepoInfo,proto3" json:"RepoInfo,omitempty"`
	ObjType              ObjType           `protobuf:"varint,8,opt,name=ObjType,proto3,enum=ObjType" json:"ObjType,omitempty"`
	SensorIdStr          string            `protobuf:"bytes,9,opt,name=SensorIdStr,proto3" json:"SensorIdStr,omitempty"`
	UniqueSensorId       string            `protobuf:"bytes,10,opt,name=UniqueSensorId,proto3" json:"UniqueSensorId,omitempty"`
	AdditionalInfos      map[string]string `protobuf:"bytes,11,rep,name=AdditionalInfos,proto3" json:"AdditionalInfos,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SrcMetadata) Reset()         { *m = SrcMetadata{} }
func (m *SrcMetadata) String() string { return proto.CompactTextString(m) }
func (*SrcMetadata) ProtoMessage()    {}
func (*SrcMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_cee8f00986763945, []int{0}
}
func (m *SrcMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrcMetadata.Unmarshal(m, b)
}
func (m *SrcMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrcMetadata.Marshal(b, m, deterministic)
}
func (dst *SrcMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrcMetadata.Merge(dst, src)
}
func (m *SrcMetadata) XXX_Size() int {
	return xxx_messageInfo_SrcMetadata.Size(m)
}
func (m *SrcMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_SrcMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_SrcMetadata proto.InternalMessageInfo

func (m *SrcMetadata) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *SrcMetadata) GetDuration() int32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *SrcMetadata) GetSensorId() int32 {
	if m != nil {
		return m.SensorId
	}
	return 0
}

func (m *SrcMetadata) GetSensorName() string {
	if m != nil {
		return m.SensorName
	}
	return ""
}

func (m *SrcMetadata) GetSensorUrl() string {
	if m != nil {
		return m.SensorUrl
	}
	return ""
}

func (m *SrcMetadata) GetRepoId() int32 {
	if m != nil {
		return m.RepoId
	}
	return 0
}

func (m *SrcMetadata) GetRepoInfo() string {
	if m != nil {
		return m.RepoInfo
	}
	return ""
}

func (m *SrcMetadata) GetObjType() ObjType {
	if m != nil {
		return m.ObjType
	}
	return ObjType_OBJ_TYPE_UNKNOWN
}

func (m *SrcMetadata) GetSensorIdStr() string {
	if m != nil {
		return m.SensorIdStr
	}
	return ""
}

func (m *SrcMetadata) GetUniqueSensorId() string {
	if m != nil {
		return m.UniqueSensorId
	}
	return ""
}

func (m *SrcMetadata) GetAdditionalInfos() map[string]string {
	if m != nil {
		return m.AdditionalInfos
	}
	return nil
}

// -ping请求
type PingRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingRequest) Reset()         { *m = PingRequest{} }
func (m *PingRequest) String() string { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()    {}
func (*PingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_cee8f00986763945, []int{1}
}
func (m *PingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingRequest.Unmarshal(m, b)
}
func (m *PingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingRequest.Marshal(b, m, deterministic)
}
func (dst *PingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingRequest.Merge(dst, src)
}
func (m *PingRequest) XXX_Size() int {
	return xxx_messageInfo_PingRequest.Size(m)
}
func (m *PingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PingRequest proto.InternalMessageInfo

// -ping响应
type PingResponse struct {
	// -matrix的状态描述，正常时为"ok"
	Message              string   `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingResponse) Reset()         { *m = PingResponse{} }
func (m *PingResponse) String() string { return proto.CompactTextString(m) }
func (*PingResponse) ProtoMessage()    {}
func (*PingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_cee8f00986763945, []int{2}
}
func (m *PingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingResponse.Unmarshal(m, b)
}
func (m *PingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingResponse.Marshal(b, m, deterministic)
}
func (dst *PingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingResponse.Merge(dst, src)
}
func (m *PingResponse) XXX_Size() int {
	return xxx_messageInfo_PingResponse.Size(m)
}
func (m *PingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PingResponse proto.InternalMessageInfo

func (m *PingResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// -带有置信度的矩形框
type Cutboard struct {
	// -矩形框左上点坐标X
	X int32 `protobuf:"varint,1,opt,name=X,proto3" json:"X,omitempty"`
	// -矩形框左上点坐标y
	Y int32 `protobuf:"varint,2,opt,name=Y,proto3" json:"Y,omitempty"`
	// -矩形框宽度
	Width int32 `protobuf:"varint,3,opt,name=Width,proto3" json:"Width,omitempty"`
	// -矩形框高度
	Height int32 `protobuf:"varint,4,opt,name=Height,proto3" json:"Height,omitempty"`
	// -保留字段
	ResWidth int32 `protobuf:"varint,5,opt,name=ResWidth,proto3" json:"ResWidth,omitempty"`
	// -保留字段
	ResHeight int32 `protobuf:"varint,6,opt,name=ResHeight,proto3" json:"ResHeight,omitempty"`
	// -矩形框的置信度
	Confidence           float32  `protobuf:"fixed32,7,opt,name=Confidence,proto3" json:"Confidence,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cutboard) Reset()         { *m = Cutboard{} }
func (m *Cutboard) String() string { return proto.CompactTextString(m) }
func (*Cutboard) ProtoMessage()    {}
func (*Cutboard) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_cee8f00986763945, []int{3}
}
func (m *Cutboard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cutboard.Unmarshal(m, b)
}
func (m *Cutboard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cutboard.Marshal(b, m, deterministic)
}
func (dst *Cutboard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cutboard.Merge(dst, src)
}
func (m *Cutboard) XXX_Size() int {
	return xxx_messageInfo_Cutboard.Size(m)
}
func (m *Cutboard) XXX_DiscardUnknown() {
	xxx_messageInfo_Cutboard.DiscardUnknown(m)
}

var xxx_messageInfo_Cutboard proto.InternalMessageInfo

func (m *Cutboard) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Cutboard) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *Cutboard) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Cutboard) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Cutboard) GetResWidth() int32 {
	if m != nil {
		return m.ResWidth
	}
	return 0
}

func (m *Cutboard) GetResHeight() int32 {
	if m != nil {
		return m.ResHeight
	}
	return 0
}

func (m *Cutboard) GetConfidence() float32 {
	if m != nil {
		return m.Confidence
	}
	return 0
}

type PointF struct {
	X                    float32  `protobuf:"fixed32,1,opt,name=X,proto3" json:"X,omitempty"`
	Y                    float32  `protobuf:"fixed32,2,opt,name=Y,proto3" json:"Y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PointF) Reset()         { *m = PointF{} }
func (m *PointF) String() string { return proto.CompactTextString(m) }
func (*PointF) ProtoMessage()    {}
func (*PointF) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_cee8f00986763945, []int{4}
}
func (m *PointF) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PointF.Unmarshal(m, b)
}
func (m *PointF) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PointF.Marshal(b, m, deterministic)
}
func (dst *PointF) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PointF.Merge(dst, src)
}
func (m *PointF) XXX_Size() int {
	return xxx_messageInfo_PointF.Size(m)
}
func (m *PointF) XXX_DiscardUnknown() {
	xxx_messageInfo_PointF.DiscardUnknown(m)
}

var xxx_messageInfo_PointF proto.InternalMessageInfo

func (m *PointF) GetX() float32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *PointF) GetY() float32 {
	if m != nil {
		return m.Y
	}
	return 0
}

type Rect struct {
	X                    int32    `protobuf:"varint,1,opt,name=X,proto3" json:"X,omitempty"`
	Y                    int32    `protobuf:"varint,2,opt,name=Y,proto3" json:"Y,omitempty"`
	Width                int32    `protobuf:"varint,3,opt,name=Width,proto3" json:"Width,omitempty"`
	Height               int32    `protobuf:"varint,4,opt,name=Height,proto3" json:"Height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Rect) Reset()         { *m = Rect{} }
func (m *Rect) String() string { return proto.CompactTextString(m) }
func (*Rect) ProtoMessage()    {}
func (*Rect) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_cee8f00986763945, []int{5}
}
func (m *Rect) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rect.Unmarshal(m, b)
}
func (m *Rect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rect.Marshal(b, m, deterministic)
}
func (dst *Rect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rect.Merge(dst, src)
}
func (m *Rect) XXX_Size() int {
	return xxx_messageInfo_Rect.Size(m)
}
func (m *Rect) XXX_DiscardUnknown() {
	xxx_messageInfo_Rect.DiscardUnknown(m)
}

var xxx_messageInfo_Rect proto.InternalMessageInfo

func (m *Rect) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Rect) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *Rect) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Rect) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

type RectF struct {
	X                    float32  `protobuf:"fixed32,1,opt,name=X,proto3" json:"X,omitempty"`
	Y                    float32  `protobuf:"fixed32,2,opt,name=Y,proto3" json:"Y,omitempty"`
	Width                float32  `protobuf:"fixed32,3,opt,name=Width,proto3" json:"Width,omitempty"`
	Height               float32  `protobuf:"fixed32,4,opt,name=Height,proto3" json:"Height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RectF) Reset()         { *m = RectF{} }
func (m *RectF) String() string { return proto.CompactTextString(m) }
func (*RectF) ProtoMessage()    {}
func (*RectF) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_cee8f00986763945, []int{6}
}
func (m *RectF) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RectF.Unmarshal(m, b)
}
func (m *RectF) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RectF.Marshal(b, m, deterministic)
}
func (dst *RectF) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RectF.Merge(dst, src)
}
func (m *RectF) XXX_Size() int {
	return xxx_messageInfo_RectF.Size(m)
}
func (m *RectF) XXX_DiscardUnknown() {
	xxx_messageInfo_RectF.DiscardUnknown(m)
}

var xxx_messageInfo_RectF proto.InternalMessageInfo

func (m *RectF) GetX() float32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *RectF) GetY() float32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *RectF) GetWidth() float32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *RectF) GetHeight() float32 {
	if m != nil {
		return m.Height
	}
	return 0
}

type RotatedRect struct {
	CenterX              float32  `protobuf:"fixed32,1,opt,name=CenterX,proto3" json:"CenterX,omitempty"`
	CenterY              float32  `protobuf:"fixed32,2,opt,name=CenterY,proto3" json:"CenterY,omitempty"`
	Width                float32  `protobuf:"fixed32,3,opt,name=Width,proto3" json:"Width,omitempty"`
	Height               float32  `protobuf:"fixed32,4,opt,name=Height,proto3" json:"Height,omitempty"`
	Angle                float32  `protobuf:"fixed32,5,opt,name=Angle,proto3" json:"Angle,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RotatedRect) Reset()         { *m = RotatedRect{} }
func (m *RotatedRect) String() string { return proto.CompactTextString(m) }
func (*RotatedRect) ProtoMessage()    {}
func (*RotatedRect) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_cee8f00986763945, []int{7}
}
func (m *RotatedRect) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RotatedRect.Unmarshal(m, b)
}
func (m *RotatedRect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RotatedRect.Marshal(b, m, deterministic)
}
func (dst *RotatedRect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RotatedRect.Merge(dst, src)
}
func (m *RotatedRect) XXX_Size() int {
	return xxx_messageInfo_RotatedRect.Size(m)
}
func (m *RotatedRect) XXX_DiscardUnknown() {
	xxx_messageInfo_RotatedRect.DiscardUnknown(m)
}

var xxx_messageInfo_RotatedRect proto.InternalMessageInfo

func (m *RotatedRect) GetCenterX() float32 {
	if m != nil {
		return m.CenterX
	}
	return 0
}

func (m *RotatedRect) GetCenterY() float32 {
	if m != nil {
		return m.CenterY
	}
	return 0
}

func (m *RotatedRect) GetWidth() float32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *RotatedRect) GetHeight() float32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *RotatedRect) GetAngle() float32 {
	if m != nil {
		return m.Angle
	}
	return 0
}

type Trajectory struct {
	Timestamp            int64     `protobuf:"varint,1,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Cutboard             *Cutboard `protobuf:"bytes,2,opt,name=Cutboard,proto3" json:"Cutboard,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Trajectory) Reset()         { *m = Trajectory{} }
func (m *Trajectory) String() string { return proto.CompactTextString(m) }
func (*Trajectory) ProtoMessage()    {}
func (*Trajectory) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_cee8f00986763945, []int{8}
}
func (m *Trajectory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trajectory.Unmarshal(m, b)
}
func (m *Trajectory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trajectory.Marshal(b, m, deterministic)
}
func (dst *Trajectory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trajectory.Merge(dst, src)
}
func (m *Trajectory) XXX_Size() int {
	return xxx_messageInfo_Trajectory.Size(m)
}
func (m *Trajectory) XXX_DiscardUnknown() {
	xxx_messageInfo_Trajectory.DiscardUnknown(m)
}

var xxx_messageInfo_Trajectory proto.InternalMessageInfo

func (m *Trajectory) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Trajectory) GetCutboard() *Cutboard {
	if m != nil {
		return m.Cutboard
	}
	return nil
}

// -矩形框及其裁剪图
type CutboardImage struct {
	// -矩形框的坐标
	Cutboard *Cutboard `protobuf:"bytes,1,opt,name=Cutboard,proto3" json:"Cutboard,omitempty"`
	// -裁剪图，基于Cutboard而非Rect
	Img *Image `protobuf:"bytes,2,opt,name=Img,proto3" json:"Img,omitempty"`
	// -带角度的矩形框
	Rect *RotatedRect `protobuf:"bytes,3,opt,name=Rect,proto3" json:"Rect,omitempty"`
	// -速度
	CutboardSpeed CutboardSpeed `protobuf:"varint,8,opt,name=CutboardSpeed,proto3,enum=CutboardSpeed" json:"CutboardSpeed,omitempty"`
	// -方向
	CutboardDirection CutboardDirection `protobuf:"varint,9,opt,name=CutboardDirection,proto3,enum=CutboardDirection" json:"CutboardDirection,omitempty"`
	// -轨迹信息
	Trajectory           []*Trajectory `protobuf:"bytes,10,rep,name=Trajectory,proto3" json:"Trajectory,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CutboardImage) Reset()         { *m = CutboardImage{} }
func (m *CutboardImage) String() string { return proto.CompactTextString(m) }
func (*CutboardImage) ProtoMessage()    {}
func (*CutboardImage) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_cee8f00986763945, []int{9}
}
func (m *CutboardImage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CutboardImage.Unmarshal(m, b)
}
func (m *CutboardImage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CutboardImage.Marshal(b, m, deterministic)
}
func (dst *CutboardImage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CutboardImage.Merge(dst, src)
}
func (m *CutboardImage) XXX_Size() int {
	return xxx_messageInfo_CutboardImage.Size(m)
}
func (m *CutboardImage) XXX_DiscardUnknown() {
	xxx_messageInfo_CutboardImage.DiscardUnknown(m)
}

var xxx_messageInfo_CutboardImage proto.InternalMessageInfo

func (m *CutboardImage) GetCutboard() *Cutboard {
	if m != nil {
		return m.Cutboard
	}
	return nil
}

func (m *CutboardImage) GetImg() *Image {
	if m != nil {
		return m.Img
	}
	return nil
}

func (m *CutboardImage) GetRect() *RotatedRect {
	if m != nil {
		return m.Rect
	}
	return nil
}

func (m *CutboardImage) GetCutboardSpeed() CutboardSpeed {
	if m != nil {
		return m.CutboardSpeed
	}
	return CutboardSpeed_CUTBOARD_SPEED_UNKNOWN
}

func (m *CutboardImage) GetCutboardDirection() CutboardDirection {
	if m != nil {
		return m.CutboardDirection
	}
	return CutboardDirection_CUTBOARD_DIRECTION_UNKNOWN
}

func (m *CutboardImage) GetTrajectory() []*Trajectory {
	if m != nil {
		return m.Trajectory
	}
	return nil
}

// -颜色
type Color struct {
	// -颜色值的ID
	ColorId int32 `protobuf:"varint,1,opt,name=ColorId,proto3" json:"ColorId,omitempty"`
	// -颜色值的置信度
	Confidence float32 `protobuf:"fixed32,2,opt,name=Confidence,proto3" json:"Confidence,omitempty"`
	// -颜色值的简体中文表示
	ColorName            string   `protobuf:"bytes,3,opt,name=ColorName,proto3" json:"ColorName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Color) Reset()         { *m = Color{} }
func (m *Color) String() string { return proto.CompactTextString(m) }
func (*Color) ProtoMessage()    {}
func (*Color) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_cee8f00986763945, []int{10}
}
func (m *Color) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Color.Unmarshal(m, b)
}
func (m *Color) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Color.Marshal(b, m, deterministic)
}
func (dst *Color) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Color.Merge(dst, src)
}
func (m *Color) XXX_Size() int {
	return xxx_messageInfo_Color.Size(m)
}
func (m *Color) XXX_DiscardUnknown() {
	xxx_messageInfo_Color.DiscardUnknown(m)
}

var xxx_messageInfo_Color proto.InternalMessageInfo

func (m *Color) GetColorId() int32 {
	if m != nil {
		return m.ColorId
	}
	return 0
}

func (m *Color) GetConfidence() float32 {
	if m != nil {
		return m.Confidence
	}
	return 0
}

func (m *Color) GetColorName() string {
	if m != nil {
		return m.ColorName
	}
	return ""
}

type FeatureVector struct {
	Id                   int64    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Feature              string   `protobuf:"bytes,2,opt,name=Feature,proto3" json:"Feature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FeatureVector) Reset()         { *m = FeatureVector{} }
func (m *FeatureVector) String() string { return proto.CompactTextString(m) }
func (*FeatureVector) ProtoMessage()    {}
func (*FeatureVector) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_cee8f00986763945, []int{11}
}
func (m *FeatureVector) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeatureVector.Unmarshal(m, b)
}
func (m *FeatureVector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeatureVector.Marshal(b, m, deterministic)
}
func (dst *FeatureVector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeatureVector.Merge(dst, src)
}
func (m *FeatureVector) XXX_Size() int {
	return xxx_messageInfo_FeatureVector.Size(m)
}
func (m *FeatureVector) XXX_DiscardUnknown() {
	xxx_messageInfo_FeatureVector.DiscardUnknown(m)
}

var xxx_messageInfo_FeatureVector proto.InternalMessageInfo

func (m *FeatureVector) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FeatureVector) GetFeature() string {
	if m != nil {
		return m.Feature
	}
	return ""
}

type NullMessage struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NullMessage) Reset()         { *m = NullMessage{} }
func (m *NullMessage) String() string { return proto.CompactTextString(m) }
func (*NullMessage) ProtoMessage()    {}
func (*NullMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_cee8f00986763945, []int{12}
}
func (m *NullMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NullMessage.Unmarshal(m, b)
}
func (m *NullMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NullMessage.Marshal(b, m, deterministic)
}
func (dst *NullMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NullMessage.Merge(dst, src)
}
func (m *NullMessage) XXX_Size() int {
	return xxx_messageInfo_NullMessage.Size(m)
}
func (m *NullMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_NullMessage.DiscardUnknown(m)
}

var xxx_messageInfo_NullMessage proto.InternalMessageInfo

// -属性
type Attribute struct {
	// -属性id
	AttributeId int32 `protobuf:"varint,1,opt,name=AttributeId,proto3" json:"AttributeId,omitempty"`
	// -属性的简体中文表示
	AttributeName string `protobuf:"bytes,2,opt,name=AttributeName,proto3" json:"AttributeName,omitempty"`
	// -属性值的id
	ValueId int32 `protobuf:"varint,3,opt,name=ValueId,proto3" json:"ValueId,omitempty"`
	// -属性值的简体中文表示
	ValueString string `protobuf:"bytes,4,opt,name=ValueString,proto3" json:"ValueString,omitempty"`
	// -属性值的置信度
	Confidence           float32  `protobuf:"fixed32,5,opt,name=Confidence,proto3" json:"Confidence,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Attribute) Reset()         { *m = Attribute{} }
func (m *Attribute) String() string { return proto.CompactTextString(m) }
func (*Attribute) ProtoMessage()    {}
func (*Attribute) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_cee8f00986763945, []int{13}
}
func (m *Attribute) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Attribute.Unmarshal(m, b)
}
func (m *Attribute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Attribute.Marshal(b, m, deterministic)
}
func (dst *Attribute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Attribute.Merge(dst, src)
}
func (m *Attribute) XXX_Size() int {
	return xxx_messageInfo_Attribute.Size(m)
}
func (m *Attribute) XXX_DiscardUnknown() {
	xxx_messageInfo_Attribute.DiscardUnknown(m)
}

var xxx_messageInfo_Attribute proto.InternalMessageInfo

func (m *Attribute) GetAttributeId() int32 {
	if m != nil {
		return m.AttributeId
	}
	return 0
}

func (m *Attribute) GetAttributeName() string {
	if m != nil {
		return m.AttributeName
	}
	return ""
}

func (m *Attribute) GetValueId() int32 {
	if m != nil {
		return m.ValueId
	}
	return 0
}

func (m *Attribute) GetValueString() string {
	if m != nil {
		return m.ValueString
	}
	return ""
}

func (m *Attribute) GetConfidence() float32 {
	if m != nil {
		return m.Confidence
	}
	return 0
}

// -人脸属性
type FaceAttribute struct {
	// -属性的id
	AttributeId int32 `protobuf:"varint,1,opt,name=AttributeId,proto3" json:"AttributeId,omitempty"`
	// -属性的简体中文表示
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	// -属性值的id
	ValueId int32 `protobuf:"varint,3,opt,name=ValueId,proto3" json:"ValueId,omitempty"`
	// -属性值的置信度
	Confidence float32 `protobuf:"fixed32,4,opt,name=Confidence,proto3" json:"Confidence,omitempty"`
	// -属性值
	//
	// Types that are valid to be assigned to Value:
	//	*FaceAttribute_ValueBool
	//	*FaceAttribute_ValueInt
	//	*FaceAttribute_ValueFloat
	//	*FaceAttribute_ValueString
	Value                isFaceAttribute_Value `protobuf_oneof:"Value"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *FaceAttribute) Reset()         { *m = FaceAttribute{} }
func (m *FaceAttribute) String() string { return proto.CompactTextString(m) }
func (*FaceAttribute) ProtoMessage()    {}
func (*FaceAttribute) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_cee8f00986763945, []int{14}
}
func (m *FaceAttribute) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FaceAttribute.Unmarshal(m, b)
}
func (m *FaceAttribute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FaceAttribute.Marshal(b, m, deterministic)
}
func (dst *FaceAttribute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FaceAttribute.Merge(dst, src)
}
func (m *FaceAttribute) XXX_Size() int {
	return xxx_messageInfo_FaceAttribute.Size(m)
}
func (m *FaceAttribute) XXX_DiscardUnknown() {
	xxx_messageInfo_FaceAttribute.DiscardUnknown(m)
}

var xxx_messageInfo_FaceAttribute proto.InternalMessageInfo

type isFaceAttribute_Value interface {
	isFaceAttribute_Value()
}

type FaceAttribute_ValueBool struct {
	ValueBool bool `protobuf:"varint,9,opt,name=ValueBool,proto3,oneof"`
}
type FaceAttribute_ValueInt struct {
	ValueInt int32 `protobuf:"varint,10,opt,name=ValueInt,proto3,oneof"`
}
type FaceAttribute_ValueFloat struct {
	ValueFloat float32 `protobuf:"fixed32,11,opt,name=ValueFloat,proto3,oneof"`
}
type FaceAttribute_ValueString struct {
	ValueString string `protobuf:"bytes,12,opt,name=ValueString,proto3,oneof"`
}

func (*FaceAttribute_ValueBool) isFaceAttribute_Value()   {}
func (*FaceAttribute_ValueInt) isFaceAttribute_Value()    {}
func (*FaceAttribute_ValueFloat) isFaceAttribute_Value()  {}
func (*FaceAttribute_ValueString) isFaceAttribute_Value() {}

func (m *FaceAttribute) GetValue() isFaceAttribute_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *FaceAttribute) GetAttributeId() int32 {
	if m != nil {
		return m.AttributeId
	}
	return 0
}

func (m *FaceAttribute) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FaceAttribute) GetValueId() int32 {
	if m != nil {
		return m.ValueId
	}
	return 0
}

func (m *FaceAttribute) GetConfidence() float32 {
	if m != nil {
		return m.Confidence
	}
	return 0
}

func (m *FaceAttribute) GetValueBool() bool {
	if x, ok := m.GetValue().(*FaceAttribute_ValueBool); ok {
		return x.ValueBool
	}
	return false
}

func (m *FaceAttribute) GetValueInt() int32 {
	if x, ok := m.GetValue().(*FaceAttribute_ValueInt); ok {
		return x.ValueInt
	}
	return 0
}

func (m *FaceAttribute) GetValueFloat() float32 {
	if x, ok := m.GetValue().(*FaceAttribute_ValueFloat); ok {
		return x.ValueFloat
	}
	return 0
}

func (m *FaceAttribute) GetValueString() string {
	if x, ok := m.GetValue().(*FaceAttribute_ValueString); ok {
		return x.ValueString
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*FaceAttribute) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _FaceAttribute_OneofMarshaler, _FaceAttribute_OneofUnmarshaler, _FaceAttribute_OneofSizer, []interface{}{
		(*FaceAttribute_ValueBool)(nil),
		(*FaceAttribute_ValueInt)(nil),
		(*FaceAttribute_ValueFloat)(nil),
		(*FaceAttribute_ValueString)(nil),
	}
}

func _FaceAttribute_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*FaceAttribute)
	// Value
	switch x := m.Value.(type) {
	case *FaceAttribute_ValueBool:
		t := uint64(0)
		if x.ValueBool {
			t = 1
		}
		b.EncodeVarint(9<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case *FaceAttribute_ValueInt:
		b.EncodeVarint(10<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.ValueInt))
	case *FaceAttribute_ValueFloat:
		b.EncodeVarint(11<<3 | proto.WireFixed32)
		b.EncodeFixed32(uint64(math.Float32bits(x.ValueFloat)))
	case *FaceAttribute_ValueString:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.ValueString)
	case nil:
	default:
		return fmt.Errorf("FaceAttribute.Value has unexpected type %T", x)
	}
	return nil
}

func _FaceAttribute_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*FaceAttribute)
	switch tag {
	case 9: // Value.ValueBool
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Value = &FaceAttribute_ValueBool{x != 0}
		return true, err
	case 10: // Value.ValueInt
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Value = &FaceAttribute_ValueInt{int32(x)}
		return true, err
	case 11: // Value.ValueFloat
		if wire != proto.WireFixed32 {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeFixed32()
		m.Value = &FaceAttribute_ValueFloat{math.Float32frombits(uint32(x))}
		return true, err
	case 12: // Value.ValueString
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Value = &FaceAttribute_ValueString{x}
		return true, err
	default:
		return false, nil
	}
}

func _FaceAttribute_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*FaceAttribute)
	// Value
	switch x := m.Value.(type) {
	case *FaceAttribute_ValueBool:
		n += 1 // tag and wire
		n += 1
	case *FaceAttribute_ValueInt:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.ValueInt))
	case *FaceAttribute_ValueFloat:
		n += 1 // tag and wire
		n += 4
	case *FaceAttribute_ValueString:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.ValueString)))
		n += len(x.ValueString)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// -图片，当输入的URI/BinData中可以解析出图像的宽度和高度时Width字段和Height可以省略
type Image struct {
	// -图片的id，输入时可以指定
	Id string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	// -图片的宽度
	Width int32 `protobuf:"varint,2,opt,name=Width,proto3" json:"Width,omitempty"`
	// -图片的高度
	Height int32 `protobuf:"varint,3,opt,name=Height,proto3" json:"Height,omitempty"`
	// -图片的资源标识符，优先于BinData
	URI string `protobuf:"bytes,4,opt,name=URI,proto3" json:"URI,omitempty"`
	// -图片的base64数据，若URI存在，此字段将被忽略
	BinData              string   `protobuf:"bytes,5,opt,name=BinData,proto3" json:"BinData,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Image) Reset()         { *m = Image{} }
func (m *Image) String() string { return proto.CompactTextString(m) }
func (*Image) ProtoMessage()    {}
func (*Image) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_cee8f00986763945, []int{15}
}
func (m *Image) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Image.Unmarshal(m, b)
}
func (m *Image) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Image.Marshal(b, m, deterministic)
}
func (dst *Image) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Image.Merge(dst, src)
}
func (m *Image) XXX_Size() int {
	return xxx_messageInfo_Image.Size(m)
}
func (m *Image) XXX_DiscardUnknown() {
	xxx_messageInfo_Image.DiscardUnknown(m)
}

var xxx_messageInfo_Image proto.InternalMessageInfo

func (m *Image) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Image) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Image) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Image) GetURI() string {
	if m != nil {
		return m.URI
	}
	return ""
}

func (m *Image) GetBinData() string {
	if m != nil {
		return m.BinData
	}
	return ""
}

// -人脸align结果
type FaceAlignResult struct {
	// -人脸的特征点
	LandMarks []*PointF `protobuf:"bytes,1,rep,name=LandMarks,proto3" json:"LandMarks,omitempty"`
	// -人脸特征点的分数
	LandMarkScores []float32 `protobuf:"fixed32,2,rep,packed,name=LandMarkScores,proto3" json:"LandMarkScores,omitempty"`
	// -人脸位置，目前无数据
	Box *Rect `protobuf:"bytes,3,opt,name=Box,proto3" json:"Box,omitempty"`
	// -人脸的各类分数
	Scores               map[string]float32 `protobuf:"bytes,4,rep,name=Scores,proto3" json:"Scores,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *FaceAlignResult) Reset()         { *m = FaceAlignResult{} }
func (m *FaceAlignResult) String() string { return proto.CompactTextString(m) }
func (*FaceAlignResult) ProtoMessage()    {}
func (*FaceAlignResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_cee8f00986763945, []int{16}
}
func (m *FaceAlignResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FaceAlignResult.Unmarshal(m, b)
}
func (m *FaceAlignResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FaceAlignResult.Marshal(b, m, deterministic)
}
func (dst *FaceAlignResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FaceAlignResult.Merge(dst, src)
}
func (m *FaceAlignResult) XXX_Size() int {
	return xxx_messageInfo_FaceAlignResult.Size(m)
}
func (m *FaceAlignResult) XXX_DiscardUnknown() {
	xxx_messageInfo_FaceAlignResult.DiscardUnknown(m)
}

var xxx_messageInfo_FaceAlignResult proto.InternalMessageInfo

func (m *FaceAlignResult) GetLandMarks() []*PointF {
	if m != nil {
		return m.LandMarks
	}
	return nil
}

func (m *FaceAlignResult) GetLandMarkScores() []float32 {
	if m != nil {
		return m.LandMarkScores
	}
	return nil
}

func (m *FaceAlignResult) GetBox() *Rect {
	if m != nil {
		return m.Box
	}
	return nil
}

func (m *FaceAlignResult) GetScores() map[string]float32 {
	if m != nil {
		return m.Scores
	}
	return nil
}

// -人脸所属
type FaceOwner struct {
	// 人脸所属类型 1:机动车，2:行人，3:非机动车，4:人脸
	OwnerType int32 `protobuf:"varint,1,opt,name=OwnerType,proto3" json:"OwnerType,omitempty"`
	// -人脸所属id
	OwnerId string `protobuf:"bytes,2,opt,name=OwnerId,proto3" json:"OwnerId,omitempty"`
	// 人脸所属行人
	RecPedestrian *RecPedestrian `protobuf:"bytes,4,opt,name=RecPedestrian,proto3" json:"RecPedestrian,omitempty"`
	// 人脸所属机动车
	RecVehicle *RecVehicle `protobuf:"bytes,5,opt,name=RecVehicle,proto3" json:"RecVehicle,omitempty"`
	// 人脸所属非机动车
	RecNonMotorVehicle   *RecNonMotorVehicle `protobuf:"bytes,6,opt,name=RecNonMotorVehicle,proto3" json:"RecNonMotorVehicle,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *FaceOwner) Reset()         { *m = FaceOwner{} }
func (m *FaceOwner) String() string { return proto.CompactTextString(m) }
func (*FaceOwner) ProtoMessage()    {}
func (*FaceOwner) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_cee8f00986763945, []int{17}
}
func (m *FaceOwner) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FaceOwner.Unmarshal(m, b)
}
func (m *FaceOwner) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FaceOwner.Marshal(b, m, deterministic)
}
func (dst *FaceOwner) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FaceOwner.Merge(dst, src)
}
func (m *FaceOwner) XXX_Size() int {
	return xxx_messageInfo_FaceOwner.Size(m)
}
func (m *FaceOwner) XXX_DiscardUnknown() {
	xxx_messageInfo_FaceOwner.DiscardUnknown(m)
}

var xxx_messageInfo_FaceOwner proto.InternalMessageInfo

func (m *FaceOwner) GetOwnerType() int32 {
	if m != nil {
		return m.OwnerType
	}
	return 0
}

func (m *FaceOwner) GetOwnerId() string {
	if m != nil {
		return m.OwnerId
	}
	return ""
}

func (m *FaceOwner) GetRecPedestrian() *RecPedestrian {
	if m != nil {
		return m.RecPedestrian
	}
	return nil
}

func (m *FaceOwner) GetRecVehicle() *RecVehicle {
	if m != nil {
		return m.RecVehicle
	}
	return nil
}

func (m *FaceOwner) GetRecNonMotorVehicle() *RecNonMotorVehicle {
	if m != nil {
		return m.RecNonMotorVehicle
	}
	return nil
}

// -识别到的人脸
type RecFace struct {
	// -人脸的id，在一次调用中唯一
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	// -人脸区域的置信度
	Confidence float32 `protobuf:"fixed32,2,opt,name=Confidence,proto3" json:"Confidence,omitempty"`
	// -人脸的矩形框
	Img *CutboardImage `protobuf:"bytes,3,opt,name=Img,proto3" json:"Img,omitempty"`
	// -人脸的align结果，人脸特征点及相关分数
	AlignResult *FaceAlignResult `protobuf:"bytes,4,opt,name=AlignResult,proto3" json:"AlignResult,omitempty"`
	// -人脸的质量分数，包括三维角度，检测分数等
	Qualities map[string]float32 `protobuf:"bytes,5,rep,name=Qualities,proto3" json:"Qualities,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	// -人脸的特征数据
	Features string `protobuf:"bytes,6,opt,name=Features,proto3" json:"Features,omitempty"`
	// -人脸的属性，包括年龄，性别，民族等
	Attributes []*FaceAttribute `protobuf:"bytes,7,rep,name=Attributes,proto3" json:"Attributes,omitempty"`
	// -tansform后的人脸图片
	AlignedImage *Image `protobuf:"bytes,8,opt,name=AlignedImage,proto3" json:"AlignedImage,omitempty"`
	// -transform后的alignresult
	TransformedAlignResult *FaceAlignResult `protobuf:"bytes,9,opt,name=TransformedAlignResult,proto3" json:"TransformedAlignResult,omitempty"`
	// -人脸的唯一id，与行人关联用
	FaceId               string     `protobuf:"bytes,10,opt,name=FaceId,proto3" json:"FaceId,omitempty"`
	Owner                *FaceOwner `protobuf:"bytes,11,opt,name=Owner,proto3" json:"Owner,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RecFace) Reset()         { *m = RecFace{} }
func (m *RecFace) String() string { return proto.CompactTextString(m) }
func (*RecFace) ProtoMessage()    {}
func (*RecFace) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_cee8f00986763945, []int{18}
}
func (m *RecFace) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecFace.Unmarshal(m, b)
}
func (m *RecFace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecFace.Marshal(b, m, deterministic)
}
func (dst *RecFace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecFace.Merge(dst, src)
}
func (m *RecFace) XXX_Size() int {
	return xxx_messageInfo_RecFace.Size(m)
}
func (m *RecFace) XXX_DiscardUnknown() {
	xxx_messageInfo_RecFace.DiscardUnknown(m)
}

var xxx_messageInfo_RecFace proto.InternalMessageInfo

func (m *RecFace) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RecFace) GetConfidence() float32 {
	if m != nil {
		return m.Confidence
	}
	return 0
}

func (m *RecFace) GetImg() *CutboardImage {
	if m != nil {
		return m.Img
	}
	return nil
}

func (m *RecFace) GetAlignResult() *FaceAlignResult {
	if m != nil {
		return m.AlignResult
	}
	return nil
}

func (m *RecFace) GetQualities() map[string]float32 {
	if m != nil {
		return m.Qualities
	}
	return nil
}

func (m *RecFace) GetFeatures() string {
	if m != nil {
		return m.Features
	}
	return ""
}

func (m *RecFace) GetAttributes() []*FaceAttribute {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *RecFace) GetAlignedImage() *Image {
	if m != nil {
		return m.AlignedImage
	}
	return nil
}

func (m *RecFace) GetTransformedAlignResult() *FaceAlignResult {
	if m != nil {
		return m.TransformedAlignResult
	}
	return nil
}

func (m *RecFace) GetFaceId() string {
	if m != nil {
		return m.FaceId
	}
	return ""
}

func (m *RecFace) GetOwner() *FaceOwner {
	if m != nil {
		return m.Owner
	}
	return nil
}

// -属性值
type NameAndConfidence struct {
	// -属性值的id
	Id int32 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	// -属性值的中文简体表示
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	// -属性值的置信度
	Confidence           float32  `protobuf:"fixed32,3,opt,name=Confidence,proto3" json:"Confidence,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NameAndConfidence) Reset()         { *m = NameAndConfidence{} }
func (m *NameAndConfidence) String() string { return proto.CompactTextString(m) }
func (*NameAndConfidence) ProtoMessage()    {}
func (*NameAndConfidence) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_cee8f00986763945, []int{19}
}
func (m *NameAndConfidence) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NameAndConfidence.Unmarshal(m, b)
}
func (m *NameAndConfidence) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NameAndConfidence.Marshal(b, m, deterministic)
}
func (dst *NameAndConfidence) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NameAndConfidence.Merge(dst, src)
}
func (m *NameAndConfidence) XXX_Size() int {
	return xxx_messageInfo_NameAndConfidence.Size(m)
}
func (m *NameAndConfidence) XXX_DiscardUnknown() {
	xxx_messageInfo_NameAndConfidence.DiscardUnknown(m)
}

var xxx_messageInfo_NameAndConfidence proto.InternalMessageInfo

func (m *NameAndConfidence) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *NameAndConfidence) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NameAndConfidence) GetConfidence() float32 {
	if m != nil {
		return m.Confidence
	}
	return 0
}

// -属性
type CategoryAndFeature struct {
	// -属性类别id
	Id int32 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	// -属性类别的中文简体表示
	CategoryName string `protobuf:"bytes,2,opt,name=CategoryName,proto3" json:"CategoryName,omitempty"`
	// -属性的值
	Items                []*NameAndConfidence `protobuf:"bytes,3,rep,name=Items,proto3" json:"Items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CategoryAndFeature) Reset()         { *m = CategoryAndFeature{} }
func (m *CategoryAndFeature) String() string { return proto.CompactTextString(m) }
func (*CategoryAndFeature) ProtoMessage()    {}
func (*CategoryAndFeature) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_cee8f00986763945, []int{20}
}
func (m *CategoryAndFeature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CategoryAndFeature.Unmarshal(m, b)
}
func (m *CategoryAndFeature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CategoryAndFeature.Marshal(b, m, deterministic)
}
func (dst *CategoryAndFeature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CategoryAndFeature.Merge(dst, src)
}
func (m *CategoryAndFeature) XXX_Size() int {
	return xxx_messageInfo_CategoryAndFeature.Size(m)
}
func (m *CategoryAndFeature) XXX_DiscardUnknown() {
	xxx_messageInfo_CategoryAndFeature.DiscardUnknown(m)
}

var xxx_messageInfo_CategoryAndFeature proto.InternalMessageInfo

func (m *CategoryAndFeature) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CategoryAndFeature) GetCategoryName() string {
	if m != nil {
		return m.CategoryName
	}
	return ""
}

func (m *CategoryAndFeature) GetItems() []*NameAndConfidence {
	if m != nil {
		return m.Items
	}
	return nil
}

// -人的属性
type PeopleAttr struct {
	// -性别
	Sex *NameAndConfidence `protobuf:"bytes,1,opt,name=Sex,proto3" json:"Sex,omitempty"`
	// -年龄
	Age *NameAndConfidence `protobuf:"bytes,2,opt,name=Age,proto3" json:"Age,omitempty"`
	// -民族
	National *NameAndConfidence `protobuf:"bytes,3,opt,name=National,proto3" json:"National,omitempty"`
	// -其他关于人的属性，比如上身衣服颜色，眼镜，帽子等
	Category             []*CategoryAndFeature `protobuf:"bytes,4,rep,name=Category,proto3" json:"Category,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *PeopleAttr) Reset()         { *m = PeopleAttr{} }
func (m *PeopleAttr) String() string { return proto.CompactTextString(m) }
func (*PeopleAttr) ProtoMessage()    {}
func (*PeopleAttr) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_cee8f00986763945, []int{21}
}
func (m *PeopleAttr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeopleAttr.Unmarshal(m, b)
}
func (m *PeopleAttr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeopleAttr.Marshal(b, m, deterministic)
}
func (dst *PeopleAttr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeopleAttr.Merge(dst, src)
}
func (m *PeopleAttr) XXX_Size() int {
	return xxx_messageInfo_PeopleAttr.Size(m)
}
func (m *PeopleAttr) XXX_DiscardUnknown() {
	xxx_messageInfo_PeopleAttr.DiscardUnknown(m)
}

var xxx_messageInfo_PeopleAttr proto.InternalMessageInfo

func (m *PeopleAttr) GetSex() *NameAndConfidence {
	if m != nil {
		return m.Sex
	}
	return nil
}

func (m *PeopleAttr) GetAge() *NameAndConfidence {
	if m != nil {
		return m.Age
	}
	return nil
}

func (m *PeopleAttr) GetNational() *NameAndConfidence {
	if m != nil {
		return m.National
	}
	return nil
}

func (m *PeopleAttr) GetCategory() []*CategoryAndFeature {
	if m != nil {
		return m.Category
	}
	return nil
}

// -识别到的机动车
type RecVehicle struct {
	// -机动车对象的id，由matrix分配，同一次调用中唯一
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	// -机动车的区域坐标和裁剪图
	Img *CutboardImage `protobuf:"bytes,2,opt,name=Img,proto3" json:"Img,omitempty"`
	// -机动车的特征数据
	Features string `protobuf:"bytes,3,opt,name=Features,proto3" json:"Features,omitempty"`
	// -机动车的五级属性
	ModelType *VehicleModelType `protobuf:"bytes,4,opt,name=ModelType,proto3" json:"ModelType,omitempty"`
	// -机动车的颜色
	Color *Color `protobuf:"bytes,5,opt,name=Color,proto3" json:"Color,omitempty"`
	// -物件
	Symbols []*VehicleSymbol `protobuf:"bytes,6,rep,name=Symbols,proto3" json:"Symbols,omitempty"`
	// -车牌
	Plates []*LicensePlate `protobuf:"bytes,7,rep,name=Plates,proto3" json:"Plates,omitempty"`
	// -乘员
	Passengers []*Passenger `protobuf:"bytes,8,rep,name=Passengers,proto3" json:"Passengers,omitempty"`
	// -属性，机动车的属性
	Attributes []*Attribute `protobuf:"bytes,9,rep,name=Attributes,proto3" json:"Attributes,omitempty"`
	// -是否有人脸
	HasFace bool `protobuf:"varint,10,opt,name=HasFace,proto3" json:"HasFace,omitempty"`
	// 车辆加油数据，临时放在该位置，将来转移到上层业务
	OilEventWithPlate    *OilEventWithPlate `protobuf:"bytes,16,opt,name=OilEventWithPlate,proto3" json:"OilEventWithPlate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *RecVehicle) Reset()         { *m = RecVehicle{} }
func (m *RecVehicle) String() string { return proto.CompactTextString(m) }
func (*RecVehicle) ProtoMessage()    {}
func (*RecVehicle) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_cee8f00986763945, []int{22}
}
func (m *RecVehicle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecVehicle.Unmarshal(m, b)
}
func (m *RecVehicle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecVehicle.Marshal(b, m, deterministic)
}
func (dst *RecVehicle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecVehicle.Merge(dst, src)
}
func (m *RecVehicle) XXX_Size() int {
	return xxx_messageInfo_RecVehicle.Size(m)
}
func (m *RecVehicle) XXX_DiscardUnknown() {
	xxx_messageInfo_RecVehicle.DiscardUnknown(m)
}

var xxx_messageInfo_RecVehicle proto.InternalMessageInfo

func (m *RecVehicle) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RecVehicle) GetImg() *CutboardImage {
	if m != nil {
		return m.Img
	}
	return nil
}

func (m *RecVehicle) GetFeatures() string {
	if m != nil {
		return m.Features
	}
	return ""
}

func (m *RecVehicle) GetModelType() *VehicleModelType {
	if m != nil {
		return m.ModelType
	}
	return nil
}

func (m *RecVehicle) GetColor() *Color {
	if m != nil {
		return m.Color
	}
	return nil
}

func (m *RecVehicle) GetSymbols() []*VehicleSymbol {
	if m != nil {
		return m.Symbols
	}
	return nil
}

func (m *RecVehicle) GetPlates() []*LicensePlate {
	if m != nil {
		return m.Plates
	}
	return nil
}

func (m *RecVehicle) GetPassengers() []*Passenger {
	if m != nil {
		return m.Passengers
	}
	return nil
}

func (m *RecVehicle) GetAttributes() []*Attribute {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *RecVehicle) GetHasFace() bool {
	if m != nil {
		return m.HasFace
	}
	return false
}

func (m *RecVehicle) GetOilEventWithPlate() *OilEventWithPlate {
	if m != nil {
		return m.OilEventWithPlate
	}
	return nil
}

// -识别到的非机动车
type RecNonMotorVehicle struct {
	// -非机动车的id，由matrix分配，同一次调用中唯一
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	// -非机动车的区域坐标和裁剪图
	Img *CutboardImage `protobuf:"bytes,2,opt,name=Img,proto3" json:"Img,omitempty"`
	// -属性，非机动车的属性
	Attributes []*Attribute `protobuf:"bytes,3,rep,name=Attributes,proto3" json:"Attributes,omitempty"`
	// -乘客
	Passengers []*Passenger `protobuf:"bytes,4,rep,name=Passengers,proto3" json:"Passengers,omitempty"`
	// -非机动车的特征
	Features string `protobuf:"bytes,5,opt,name=Features,proto3" json:"Features,omitempty"`
	// -车牌
	Plate *LicensePlate `protobuf:"bytes,6,opt,name=Plate,proto3" json:"Plate,omitempty"`
	// -是否有人脸
	HasFace              bool     `protobuf:"varint,7,opt,name=HasFace,proto3" json:"HasFace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecNonMotorVehicle) Reset()         { *m = RecNonMotorVehicle{} }
func (m *RecNonMotorVehicle) String() string { return proto.CompactTextString(m) }
func (*RecNonMotorVehicle) ProtoMessage()    {}
func (*RecNonMotorVehicle) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_cee8f00986763945, []int{23}
}
func (m *RecNonMotorVehicle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecNonMotorVehicle.Unmarshal(m, b)
}
func (m *RecNonMotorVehicle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecNonMotorVehicle.Marshal(b, m, deterministic)
}
func (dst *RecNonMotorVehicle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecNonMotorVehicle.Merge(dst, src)
}
func (m *RecNonMotorVehicle) XXX_Size() int {
	return xxx_messageInfo_RecNonMotorVehicle.Size(m)
}
func (m *RecNonMotorVehicle) XXX_DiscardUnknown() {
	xxx_messageInfo_RecNonMotorVehicle.DiscardUnknown(m)
}

var xxx_messageInfo_RecNonMotorVehicle proto.InternalMessageInfo

func (m *RecNonMotorVehicle) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RecNonMotorVehicle) GetImg() *CutboardImage {
	if m != nil {
		return m.Img
	}
	return nil
}

func (m *RecNonMotorVehicle) GetAttributes() []*Attribute {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *RecNonMotorVehicle) GetPassengers() []*Passenger {
	if m != nil {
		return m.Passengers
	}
	return nil
}

func (m *RecNonMotorVehicle) GetFeatures() string {
	if m != nil {
		return m.Features
	}
	return ""
}

func (m *RecNonMotorVehicle) GetPlate() *LicensePlate {
	if m != nil {
		return m.Plate
	}
	return nil
}

func (m *RecNonMotorVehicle) GetHasFace() bool {
	if m != nil {
		return m.HasFace
	}
	return false
}

// -乘员
type Passenger struct {
	// -乘员的id
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	// -乘员的人脸
	Face *RecFace `protobuf:"bytes,2,opt,name=Face,proto3" json:"Face,omitempty"`
	// -此乘员是否为驾驶员
	Driver bool `protobuf:"varint,3,opt,name=Driver,proto3" json:"Driver,omitempty"`
	// -乘员的区域坐标和裁剪图
	Img *CutboardImage `protobuf:"bytes,4,opt,name=Img,proto3" json:"Img,omitempty"`
	// -此乘员是否打电话，值域为ThreeStatus
	PhoneFlag int32 `protobuf:"varint,5,opt,name=PhoneFlag,proto3" json:"PhoneFlag,omitempty"`
	// -此乘员是否系安全带，值域为ThreeStatus
	BeltFlag int32 `protobuf:"varint,6,opt,name=BeltFlag,proto3" json:"BeltFlag,omitempty"`
	// -电话标志的置信度
	PhoneConfidence float32 `protobuf:"fixed32,7,opt,name=PhoneConfidence,proto3" json:"PhoneConfidence,omitempty"`
	// -安全带标志的置信度
	BeltConfidence float32 `protobuf:"fixed32,8,opt,name=BeltConfidence,proto3" json:"BeltConfidence,omitempty"`
	// -乘员的属性
	Attributes []*Attribute `protobuf:"bytes,9,rep,name=Attributes,proto3" json:"Attributes,omitempty"`
	// -此乘员是否遮挡面部，值域为ThreeStatus
	FacecoverFlag int32 `protobuf:"varint,10,opt,name=FacecoverFlag,proto3" json:"FacecoverFlag,omitempty"`
	// -遮挡面部的置信度
	FacecoverConfidence float32 `protobuf:"fixed32,11,opt,name=FacecoverConfidence,proto3" json:"FacecoverConfidence,omitempty"`
	// -通过 bingo 匹配过的最优人脸
	RankedFace           *CapturedFace `protobuf:"bytes,16,opt,name=RankedFace,proto3" json:"RankedFace,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Passenger) Reset()         { *m = Passenger{} }
func (m *Passenger) String() string { return proto.CompactTextString(m) }
func (*Passenger) ProtoMessage()    {}
func (*Passenger) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_cee8f00986763945, []int{24}
}
func (m *Passenger) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Passenger.Unmarshal(m, b)
}
func (m *Passenger) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Passenger.Marshal(b, m, deterministic)
}
func (dst *Passenger) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Passenger.Merge(dst, src)
}
func (m *Passenger) XXX_Size() int {
	return xxx_messageInfo_Passenger.Size(m)
}
func (m *Passenger) XXX_DiscardUnknown() {
	xxx_messageInfo_Passenger.DiscardUnknown(m)
}

var xxx_messageInfo_Passenger proto.InternalMessageInfo

func (m *Passenger) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Passenger) GetFace() *RecFace {
	if m != nil {
		return m.Face
	}
	return nil
}

func (m *Passenger) GetDriver() bool {
	if m != nil {
		return m.Driver
	}
	return false
}

func (m *Passenger) GetImg() *CutboardImage {
	if m != nil {
		return m.Img
	}
	return nil
}

func (m *Passenger) GetPhoneFlag() int32 {
	if m != nil {
		return m.PhoneFlag
	}
	return 0
}

func (m *Passenger) GetBeltFlag() int32 {
	if m != nil {
		return m.BeltFlag
	}
	return 0
}

func (m *Passenger) GetPhoneConfidence() float32 {
	if m != nil {
		return m.PhoneConfidence
	}
	return 0
}

func (m *Passenger) GetBeltConfidence() float32 {
	if m != nil {
		return m.BeltConfidence
	}
	return 0
}

func (m *Passenger) GetAttributes() []*Attribute {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *Passenger) GetFacecoverFlag() int32 {
	if m != nil {
		return m.FacecoverFlag
	}
	return 0
}

func (m *Passenger) GetFacecoverConfidence() float32 {
	if m != nil {
		return m.FacecoverConfidence
	}
	return 0
}

func (m *Passenger) GetRankedFace() *CapturedFace {
	if m != nil {
		return m.RankedFace
	}
	return nil
}

// -行人
type RecPedestrian struct {
	// -行人id，由matrix分配，同一次调用中唯一
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	// -行人的区域坐标和裁剪图
	Img *CutboardImage `protobuf:"bytes,2,opt,name=Img,proto3" json:"Img,omitempty"`
	// -行人的置信度
	Confidence float32 `protobuf:"fixed32,3,opt,name=Confidence,proto3" json:"Confidence,omitempty"`
	// -行人的属性
	PedesAttr *PeopleAttr `protobuf:"bytes,4,opt,name=PedesAttr,proto3" json:"PedesAttr,omitempty"`
	// -行人的人脸
	Face *RecFace `protobuf:"bytes,5,opt,name=Face,proto3" json:"Face,omitempty"`
	// -行人的特征
	Features string `protobuf:"bytes,6,opt,name=Features,proto3" json:"Features,omitempty"`
	// -通过 bingo 匹配过的最优人脸
	RankedFace *CapturedFace `protobuf:"bytes,16,opt,name=RankedFace,proto3" json:"RankedFace,omitempty"`
	// -是否有人脸
	HasFace              bool     `protobuf:"varint,17,opt,name=HasFace,proto3" json:"HasFace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecPedestrian) Reset()         { *m = RecPedestrian{} }
func (m *RecPedestrian) String() string { return proto.CompactTextString(m) }
func (*RecPedestrian) ProtoMessage()    {}
func (*RecPedestrian) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_cee8f00986763945, []int{25}
}
func (m *RecPedestrian) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecPedestrian.Unmarshal(m, b)
}
func (m *RecPedestrian) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecPedestrian.Marshal(b, m, deterministic)
}
func (dst *RecPedestrian) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecPedestrian.Merge(dst, src)
}
func (m *RecPedestrian) XXX_Size() int {
	return xxx_messageInfo_RecPedestrian.Size(m)
}
func (m *RecPedestrian) XXX_DiscardUnknown() {
	xxx_messageInfo_RecPedestrian.DiscardUnknown(m)
}

var xxx_messageInfo_RecPedestrian proto.InternalMessageInfo

func (m *RecPedestrian) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RecPedestrian) GetImg() *CutboardImage {
	if m != nil {
		return m.Img
	}
	return nil
}

func (m *RecPedestrian) GetConfidence() float32 {
	if m != nil {
		return m.Confidence
	}
	return 0
}

func (m *RecPedestrian) GetPedesAttr() *PeopleAttr {
	if m != nil {
		return m.PedesAttr
	}
	return nil
}

func (m *RecPedestrian) GetFace() *RecFace {
	if m != nil {
		return m.Face
	}
	return nil
}

func (m *RecPedestrian) GetFeatures() string {
	if m != nil {
		return m.Features
	}
	return ""
}

func (m *RecPedestrian) GetRankedFace() *CapturedFace {
	if m != nil {
		return m.RankedFace
	}
	return nil
}

func (m *RecPedestrian) GetHasFace() bool {
	if m != nil {
		return m.HasFace
	}
	return false
}

// -机动车的五类属性
type VehicleModelType struct {
	// -车辆的类型，比如轿车，卡车，公交车等
	StyleId         int32   `protobuf:"varint,1,opt,name=StyleId,proto3" json:"StyleId,omitempty"`
	Style           string  `protobuf:"bytes,2,opt,name=Style,proto3" json:"Style,omitempty"`
	StyleConfidence float32 `protobuf:"fixed32,3,opt,name=StyleConfidence,proto3" json:"StyleConfidence,omitempty"`
	// -车辆的主品牌，比如宝马，奥迪，大众等
	BrandId         int32   `protobuf:"varint,4,opt,name=BrandId,proto3" json:"BrandId,omitempty"`
	Brand           string  `protobuf:"bytes,5,opt,name=Brand,proto3" json:"Brand,omitempty"`
	BrandConfidence float32 `protobuf:"fixed32,6,opt,name=BrandConfidence,proto3" json:"BrandConfidence,omitempty"`
	// -车辆的子品牌，比如X5，Q7，途观等
	SubBrandId         int32   `protobuf:"varint,7,opt,name=SubBrandId,proto3" json:"SubBrandId,omitempty"`
	SubBrand           string  `protobuf:"bytes,8,opt,name=SubBrand,proto3" json:"SubBrand,omitempty"`
	SubBrandConfidence float32 `protobuf:"fixed32,9,opt,name=SubBrandConfidence,proto3" json:"SubBrandConfidence,omitempty"`
	// -车辆的年款
	ModelYearId         int32   `protobuf:"varint,10,opt,name=ModelYearId,proto3" json:"ModelYearId,omitempty"`
	ModelYear           string  `protobuf:"bytes,11,opt,name=ModelYear,proto3" json:"ModelYear,omitempty"`
	ModelYearConfidence float32 `protobuf:"fixed32,12,opt,name=ModelYearConfidence,proto3" json:"ModelYearConfidence,omitempty"`
	// -车头或车尾
	PoseId               int32    `protobuf:"varint,13,opt,name=PoseId,proto3" json:"PoseId,omitempty"`
	Pose                 string   `protobuf:"bytes,14,opt,name=Pose,proto3" json:"Pose,omitempty"`
	PoseConfidence       float32  `protobuf:"fixed32,15,opt,name=PoseConfidence,proto3" json:"PoseConfidence,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VehicleModelType) Reset()         { *m = VehicleModelType{} }
func (m *VehicleModelType) String() string { return proto.CompactTextString(m) }
func (*VehicleModelType) ProtoMessage()    {}
func (*VehicleModelType) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_cee8f00986763945, []int{26}
}
func (m *VehicleModelType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VehicleModelType.Unmarshal(m, b)
}
func (m *VehicleModelType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VehicleModelType.Marshal(b, m, deterministic)
}
func (dst *VehicleModelType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VehicleModelType.Merge(dst, src)
}
func (m *VehicleModelType) XXX_Size() int {
	return xxx_messageInfo_VehicleModelType.Size(m)
}
func (m *VehicleModelType) XXX_DiscardUnknown() {
	xxx_messageInfo_VehicleModelType.DiscardUnknown(m)
}

var xxx_messageInfo_VehicleModelType proto.InternalMessageInfo

func (m *VehicleModelType) GetStyleId() int32 {
	if m != nil {
		return m.StyleId
	}
	return 0
}

func (m *VehicleModelType) GetStyle() string {
	if m != nil {
		return m.Style
	}
	return ""
}

func (m *VehicleModelType) GetStyleConfidence() float32 {
	if m != nil {
		return m.StyleConfidence
	}
	return 0
}

func (m *VehicleModelType) GetBrandId() int32 {
	if m != nil {
		return m.BrandId
	}
	return 0
}

func (m *VehicleModelType) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

func (m *VehicleModelType) GetBrandConfidence() float32 {
	if m != nil {
		return m.BrandConfidence
	}
	return 0
}

func (m *VehicleModelType) GetSubBrandId() int32 {
	if m != nil {
		return m.SubBrandId
	}
	return 0
}

func (m *VehicleModelType) GetSubBrand() string {
	if m != nil {
		return m.SubBrand
	}
	return ""
}

func (m *VehicleModelType) GetSubBrandConfidence() float32 {
	if m != nil {
		return m.SubBrandConfidence
	}
	return 0
}

func (m *VehicleModelType) GetModelYearId() int32 {
	if m != nil {
		return m.ModelYearId
	}
	return 0
}

func (m *VehicleModelType) GetModelYear() string {
	if m != nil {
		return m.ModelYear
	}
	return ""
}

func (m *VehicleModelType) GetModelYearConfidence() float32 {
	if m != nil {
		return m.ModelYearConfidence
	}
	return 0
}

func (m *VehicleModelType) GetPoseId() int32 {
	if m != nil {
		return m.PoseId
	}
	return 0
}

func (m *VehicleModelType) GetPose() string {
	if m != nil {
		return m.Pose
	}
	return ""
}

func (m *VehicleModelType) GetPoseConfidence() float32 {
	if m != nil {
		return m.PoseConfidence
	}
	return 0
}

// -车牌
type LicensePlate struct {
	// -车牌号码
	PlateText string `protobuf:"bytes,1,opt,name=PlateText,proto3" json:"PlateText,omitempty"`
	// -车牌颜色
	Color *Color `protobuf:"bytes,2,opt,name=Color,proto3" json:"Color,omitempty"`
	// -车牌类型id
	StyleId int32 `protobuf:"varint,3,opt,name=StyleId,proto3" json:"StyleId,omitempty"`
	// -车牌类型的简体中文表示
	StyleName string `protobuf:"bytes,4,opt,name=StyleName,proto3" json:"StyleName,omitempty"`
	// -车牌的置信度
	Confidence float32 `protobuf:"fixed32,5,opt,name=Confidence,proto3" json:"Confidence,omitempty"`
	// -车牌的区域坐标和裁剪图
	Cutboard *Cutboard `protobuf:"bytes,6,opt,name=Cutboard,proto3" json:"Cutboard,omitempty"`
	// -本省车牌的置信度
	LocalProvinceConfidence float32  `protobuf:"fixed32,7,opt,name=LocalProvinceConfidence,proto3" json:"LocalProvinceConfidence,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *LicensePlate) Reset()         { *m = LicensePlate{} }
func (m *LicensePlate) String() string { return proto.CompactTextString(m) }
func (*LicensePlate) ProtoMessage()    {}
func (*LicensePlate) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_cee8f00986763945, []int{27}
}
func (m *LicensePlate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LicensePlate.Unmarshal(m, b)
}
func (m *LicensePlate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LicensePlate.Marshal(b, m, deterministic)
}
func (dst *LicensePlate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LicensePlate.Merge(dst, src)
}
func (m *LicensePlate) XXX_Size() int {
	return xxx_messageInfo_LicensePlate.Size(m)
}
func (m *LicensePlate) XXX_DiscardUnknown() {
	xxx_messageInfo_LicensePlate.DiscardUnknown(m)
}

var xxx_messageInfo_LicensePlate proto.InternalMessageInfo

func (m *LicensePlate) GetPlateText() string {
	if m != nil {
		return m.PlateText
	}
	return ""
}

func (m *LicensePlate) GetColor() *Color {
	if m != nil {
		return m.Color
	}
	return nil
}

func (m *LicensePlate) GetStyleId() int32 {
	if m != nil {
		return m.StyleId
	}
	return 0
}

func (m *LicensePlate) GetStyleName() string {
	if m != nil {
		return m.StyleName
	}
	return ""
}

func (m *LicensePlate) GetConfidence() float32 {
	if m != nil {
		return m.Confidence
	}
	return 0
}

func (m *LicensePlate) GetCutboard() *Cutboard {
	if m != nil {
		return m.Cutboard
	}
	return nil
}

func (m *LicensePlate) GetLocalProvinceConfidence() float32 {
	if m != nil {
		return m.LocalProvinceConfidence
	}
	return 0
}

// -机动车物件，比如年检标，遮阳板，小摆件等
type VehicleSymbol struct {
	// -物件的id
	SymbolId int32 `protobuf:"varint,1,opt,name=SymbolId,proto3" json:"SymbolId,omitempty"`
	// -物件名称的简体中文表示
	SymbolName string `protobuf:"bytes,2,opt,name=SymbolName,proto3" json:"SymbolName,omitempty"`
	// -物件的区域坐标和裁剪图
	Cutboard             *Cutboard `protobuf:"bytes,3,opt,name=Cutboard,proto3" json:"Cutboard,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *VehicleSymbol) Reset()         { *m = VehicleSymbol{} }
func (m *VehicleSymbol) String() string { return proto.CompactTextString(m) }
func (*VehicleSymbol) ProtoMessage()    {}
func (*VehicleSymbol) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_cee8f00986763945, []int{28}
}
func (m *VehicleSymbol) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VehicleSymbol.Unmarshal(m, b)
}
func (m *VehicleSymbol) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VehicleSymbol.Marshal(b, m, deterministic)
}
func (dst *VehicleSymbol) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VehicleSymbol.Merge(dst, src)
}
func (m *VehicleSymbol) XXX_Size() int {
	return xxx_messageInfo_VehicleSymbol.Size(m)
}
func (m *VehicleSymbol) XXX_DiscardUnknown() {
	xxx_messageInfo_VehicleSymbol.DiscardUnknown(m)
}

var xxx_messageInfo_VehicleSymbol proto.InternalMessageInfo

func (m *VehicleSymbol) GetSymbolId() int32 {
	if m != nil {
		return m.SymbolId
	}
	return 0
}

func (m *VehicleSymbol) GetSymbolName() string {
	if m != nil {
		return m.SymbolName
	}
	return ""
}

func (m *VehicleSymbol) GetCutboard() *Cutboard {
	if m != nil {
		return m.Cutboard
	}
	return nil
}

type StorageConfig struct {
	Address              string   `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	Type                 DBType   `protobuf:"varint,2,opt,name=Type,proto3,enum=DBType" json:"Type,omitempty"`
	Tags                 []string `protobuf:"bytes,3,rep,name=Tags,proto3" json:"Tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StorageConfig) Reset()         { *m = StorageConfig{} }
func (m *StorageConfig) String() string { return proto.CompactTextString(m) }
func (*StorageConfig) ProtoMessage()    {}
func (*StorageConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_cee8f00986763945, []int{29}
}
func (m *StorageConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageConfig.Unmarshal(m, b)
}
func (m *StorageConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageConfig.Marshal(b, m, deterministic)
}
func (dst *StorageConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageConfig.Merge(dst, src)
}
func (m *StorageConfig) XXX_Size() int {
	return xxx_messageInfo_StorageConfig.Size(m)
}
func (m *StorageConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageConfig.DiscardUnknown(m)
}

var xxx_messageInfo_StorageConfig proto.InternalMessageInfo

func (m *StorageConfig) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *StorageConfig) GetType() DBType {
	if m != nil {
		return m.Type
	}
	return DBType_KAFKA
}

func (m *StorageConfig) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func init() {
	proto.RegisterType((*SrcMetadata)(nil), "SrcMetadata")
	proto.RegisterMapType((map[string]string)(nil), "SrcMetadata.AdditionalInfosEntry")
	proto.RegisterType((*PingRequest)(nil), "PingRequest")
	proto.RegisterType((*PingResponse)(nil), "PingResponse")
	proto.RegisterType((*Cutboard)(nil), "Cutboard")
	proto.RegisterType((*PointF)(nil), "PointF")
	proto.RegisterType((*Rect)(nil), "Rect")
	proto.RegisterType((*RectF)(nil), "RectF")
	proto.RegisterType((*RotatedRect)(nil), "RotatedRect")
	proto.RegisterType((*Trajectory)(nil), "Trajectory")
	proto.RegisterType((*CutboardImage)(nil), "CutboardImage")
	proto.RegisterType((*Color)(nil), "Color")
	proto.RegisterType((*FeatureVector)(nil), "FeatureVector")
	proto.RegisterType((*NullMessage)(nil), "NullMessage")
	proto.RegisterType((*Attribute)(nil), "Attribute")
	proto.RegisterType((*FaceAttribute)(nil), "FaceAttribute")
	proto.RegisterType((*Image)(nil), "Image")
	proto.RegisterType((*FaceAlignResult)(nil), "FaceAlignResult")
	proto.RegisterMapType((map[string]float32)(nil), "FaceAlignResult.ScoresEntry")
	proto.RegisterType((*FaceOwner)(nil), "FaceOwner")
	proto.RegisterType((*RecFace)(nil), "RecFace")
	proto.RegisterMapType((map[string]float32)(nil), "RecFace.QualitiesEntry")
	proto.RegisterType((*NameAndConfidence)(nil), "NameAndConfidence")
	proto.RegisterType((*CategoryAndFeature)(nil), "CategoryAndFeature")
	proto.RegisterType((*PeopleAttr)(nil), "PeopleAttr")
	proto.RegisterType((*RecVehicle)(nil), "RecVehicle")
	proto.RegisterType((*RecNonMotorVehicle)(nil), "RecNonMotorVehicle")
	proto.RegisterType((*Passenger)(nil), "Passenger")
	proto.RegisterType((*RecPedestrian)(nil), "RecPedestrian")
	proto.RegisterType((*VehicleModelType)(nil), "VehicleModelType")
	proto.RegisterType((*LicensePlate)(nil), "LicensePlate")
	proto.RegisterType((*VehicleSymbol)(nil), "VehicleSymbol")
	proto.RegisterType((*StorageConfig)(nil), "StorageConfig")
	proto.RegisterEnum("CutboardDirection", CutboardDirection_name, CutboardDirection_value)
	proto.RegisterEnum("CutboardSpeed", CutboardSpeed_name, CutboardSpeed_value)
	proto.RegisterEnum("ObjType", ObjType_name, ObjType_value)
	proto.RegisterEnum("DataFmtType", DataFmtType_name, DataFmtType_value)
	proto.RegisterEnum("ThreeStatus", ThreeStatus_name, ThreeStatus_value)
	proto.RegisterEnum("DBType", DBType_name, DBType_value)
}

func init() { proto.RegisterFile("common.proto", fileDescriptor_common_cee8f00986763945) }

var fileDescriptor_common_cee8f00986763945 = []byte{
	// 2528 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x59, 0x5f, 0x73, 0xdb, 0xc6,
	0x11, 0x17, 0x00, 0xfe, 0xc3, 0x52, 0x92, 0xe1, 0xb3, 0x63, 0xc3, 0x8a, 0xe2, 0xd0, 0x88, 0xd3,
	0x51, 0x95, 0x29, 0x92, 0x51, 0xd3, 0x99, 0xa4, 0xd3, 0x87, 0x52, 0xfc, 0x63, 0x31, 0x96, 0x44,
	0xe6, 0x48, 0xd9, 0x71, 0x5f, 0x34, 0x30, 0x71, 0xa6, 0x91, 0x90, 0x80, 0x02, 0x80, 0xae, 0xf5,
	0xe6, 0xc4, 0xd3, 0xb7, 0xce, 0xf4, 0xb1, 0xdf, 0x22, 0x9d, 0x69, 0x5f, 0xda, 0xef, 0xd1, 0xe9,
	0x87, 0x68, 0xbf, 0x40, 0xfb, 0xd4, 0xce, 0xed, 0x1d, 0xfe, 0xf1, 0x8f, 0x35, 0xce, 0x54, 0x2f,
	0xba, 0xfd, 0xed, 0xde, 0xee, 0xde, 0xee, 0xde, 0xde, 0xe1, 0x08, 0x9b, 0xe3, 0x60, 0x36, 0x0b,
	0x7c, 0xfb, 0x22, 0x0c, 0xe2, 0x60, 0x07, 0x9e, 0x39, 0x63, 0x26, 0xc7, 0xe4, 0xc2, 0x9b, 0x5d,
	0xf4, 0xbd, 0x69, 0xe7, 0x05, 0xf3, 0x63, 0x81, 0x59, 0x7f, 0xd7, 0xa0, 0x3e, 0x0c, 0xc7, 0x27,
	0x2c, 0x76, 0x5c, 0x27, 0x76, 0xc8, 0x2e, 0xe8, 0x23, 0x6f, 0xc6, 0xa2, 0xd8, 0x99, 0x5d, 0x98,
	0x4a, 0x43, 0xd9, 0xd3, 0x68, 0x06, 0x90, 0x1d, 0xa8, 0xb5, 0xe7, 0xa1, 0x13, 0x7b, 0x81, 0x6f,
	0xaa, 0x0d, 0x65, 0xaf, 0x4c, 0x53, 0x9a, 0xf3, 0x86, 0xcc, 0x8f, 0x82, 0xb0, 0xe7, 0x9a, 0x9a,
	0xe0, 0x25, 0x34, 0xb9, 0x0b, 0x20, 0xc6, 0xa7, 0xce, 0x8c, 0x99, 0xa5, 0x86, 0xb2, 0xa7, 0xd3,
	0x1c, 0xc2, 0xad, 0x0a, 0xea, 0x2c, 0x9c, 0x9a, 0x65, 0x64, 0x67, 0x00, 0xb9, 0x05, 0x15, 0xca,
	0x2e, 0x82, 0x9e, 0x6b, 0x56, 0x50, 0xaf, 0xa4, 0xb8, 0x45, 0x1c, 0xf9, 0xcf, 0x02, 0xb3, 0x8a,
	0x93, 0x52, 0x9a, 0x58, 0x50, 0xed, 0x3f, 0xfd, 0x7a, 0x74, 0x79, 0xc1, 0xcc, 0x5a, 0x43, 0xd9,
	0xdb, 0x3e, 0xa8, 0xd9, 0x92, 0xa6, 0x09, 0x83, 0x34, 0xa0, 0x9e, 0x78, 0x38, 0x8c, 0x43, 0x53,
	0x47, 0x15, 0x79, 0x88, 0xfc, 0x04, 0xb6, 0xcf, 0x7c, 0xef, 0xdb, 0x39, 0x4b, 0x57, 0x06, 0x28,
	0xb4, 0x80, 0x92, 0x87, 0x70, 0xad, 0xe9, 0xba, 0x1e, 0x8f, 0x83, 0x33, 0xe5, 0xf6, 0x23, 0xb3,
	0xde, 0xd0, 0xf6, 0xea, 0x07, 0xf7, 0xec, 0x5c, 0x70, 0xed, 0x05, 0x99, 0x8e, 0x1f, 0x87, 0x97,
	0x74, 0x71, 0xe6, 0xce, 0x21, 0xdc, 0x5c, 0x25, 0x48, 0x0c, 0xd0, 0xbe, 0x61, 0x97, 0x98, 0x14,
	0x9d, 0xf2, 0x21, 0xb9, 0x09, 0xe5, 0x17, 0xce, 0x74, 0xce, 0x30, 0x17, 0x3a, 0x15, 0xc4, 0x2f,
	0xd5, 0xcf, 0x14, 0x6b, 0x0b, 0xea, 0x03, 0xcf, 0x9f, 0x50, 0xf6, 0xed, 0x9c, 0x45, 0xb1, 0xb5,
	0x07, 0x9b, 0x82, 0x8c, 0x2e, 0x02, 0x3f, 0x62, 0xc4, 0x84, 0xea, 0x09, 0x8b, 0x22, 0x67, 0xc2,
	0xa4, 0xba, 0x84, 0xb4, 0x7e, 0x50, 0xa0, 0xd6, 0x9a, 0xc7, 0x4f, 0x03, 0x27, 0x74, 0xc9, 0x26,
	0x28, 0x5f, 0xa1, 0x40, 0x99, 0x2a, 0x5f, 0x71, 0xea, 0x89, 0xcc, 0xba, 0xf2, 0x84, 0xdb, 0x7e,
	0xec, 0xb9, 0xf1, 0x73, 0x99, 0x6b, 0x41, 0xf0, 0x54, 0x1d, 0x31, 0x6f, 0xf2, 0x3c, 0xc6, 0x24,
	0x97, 0xa9, 0xa4, 0x44, 0xaa, 0x22, 0x31, 0xa1, 0x2c, 0x8a, 0x23, 0xa1, 0x79, 0xf2, 0x29, 0x8b,
	0xe4, 0x34, 0x91, 0xe1, 0x0c, 0xe0, 0xa5, 0xd3, 0x0a, 0xfc, 0x67, 0x9e, 0xcb, 0xfc, 0x31, 0xc3,
	0x34, 0xab, 0x34, 0x87, 0x58, 0xf7, 0xa1, 0x32, 0x08, 0x3c, 0x3f, 0xee, 0x66, 0xde, 0xaa, 0x05,
	0x6f, 0x55, 0xaa, 0x3c, 0xb1, 0x06, 0x50, 0xa2, 0x6c, 0x1c, 0xff, 0xff, 0x56, 0x64, 0x7d, 0x09,
	0x65, 0xae, 0xf1, 0x8d, 0x66, 0x8b, 0x2a, 0xd5, 0xd5, 0x2a, 0xd5, 0x54, 0xe5, 0xef, 0x14, 0xa8,
	0xd3, 0x20, 0x76, 0x62, 0xe6, 0xa2, 0xb3, 0x26, 0x54, 0x5b, 0xcc, 0x8f, 0x59, 0x98, 0xe8, 0x4f,
	0xc8, 0x8c, 0x93, 0xd8, 0x4a, 0xc8, 0xb7, 0xb3, 0xc8, 0xa5, 0x9b, 0xfe, 0x64, 0xca, 0x30, 0x27,
	0x2a, 0x15, 0x84, 0xf5, 0x25, 0xc0, 0x28, 0x74, 0xbe, 0x66, 0xe3, 0x38, 0x08, 0x2f, 0xaf, 0xe8,
	0x08, 0x1f, 0x66, 0xe5, 0x82, 0xae, 0xd4, 0x0f, 0x74, 0x3b, 0x01, 0x68, 0xca, 0xb2, 0xfe, 0xa8,
	0xc2, 0x56, 0x42, 0xf4, 0x66, 0xce, 0x84, 0x15, 0x26, 0x2a, 0x6b, 0x27, 0x12, 0x13, 0xb4, 0xde,
	0x6c, 0x22, 0x55, 0x57, 0x6c, 0x9c, 0x4b, 0x39, 0x44, 0x1a, 0x22, 0xa5, 0xb8, 0xd0, 0xfa, 0xc1,
	0xa6, 0x9d, 0x8b, 0x1c, 0x15, 0xc9, 0xfe, 0x34, 0xb3, 0x39, 0xbc, 0x60, 0xcc, 0x95, 0x9d, 0x60,
	0xdb, 0x2e, 0xa0, 0xb4, 0x28, 0x44, 0x7e, 0x0d, 0xd7, 0x13, 0xa0, 0xed, 0x85, 0x6c, 0x8c, 0xcd,
	0x4e, 0xc7, 0x99, 0xc4, 0x5e, 0xe2, 0xd0, 0x65, 0x61, 0xf2, 0x51, 0x3e, 0x7e, 0x26, 0x60, 0x23,
	0xa8, 0xdb, 0x19, 0x44, 0x73, 0x6c, 0xeb, 0x1c, 0xca, 0xad, 0x60, 0x1a, 0x84, 0x98, 0x53, 0x3e,
	0xe8, 0xb9, 0xb2, 0x40, 0x13, 0x72, 0x61, 0x0b, 0xa8, 0x8b, 0x5b, 0x80, 0x67, 0x08, 0x45, 0xb1,
	0xb9, 0x6a, 0xa2, 0x7b, 0xa6, 0x80, 0xf5, 0x39, 0x6c, 0x75, 0x99, 0x13, 0xcf, 0x43, 0xf6, 0x08,
	0x4d, 0x92, 0x6d, 0x50, 0xa5, 0x0d, 0x8d, 0xaa, 0x3d, 0x1e, 0xe2, 0xaa, 0x14, 0x90, 0x7d, 0x24,
	0x21, 0x79, 0x17, 0x39, 0x9d, 0x4f, 0xa7, 0x49, 0x6f, 0xf8, 0x93, 0x02, 0x7a, 0x33, 0x8e, 0x43,
	0xef, 0xe9, 0x3c, 0xc6, 0xee, 0x99, 0x12, 0xa9, 0xcf, 0x79, 0x88, 0xdc, 0x87, 0xad, 0x94, 0x44,
	0xdf, 0x84, 0xfa, 0x22, 0xc8, 0xcd, 0x3f, 0xe2, 0x7d, 0x2b, 0x3d, 0x36, 0x12, 0x92, 0x5b, 0xc0,
	0xe1, 0x30, 0x0e, 0x3d, 0x7f, 0x22, 0x8f, 0x8d, 0x3c, 0xb4, 0x10, 0x99, 0xf2, 0x52, 0x73, 0xf8,
	0xbd, 0x0a, 0x5b, 0x5d, 0x67, 0xcc, 0xde, 0xc6, 0x6b, 0x02, 0xa5, 0x9c, 0xb3, 0xa5, 0x2b, 0x7c,
	0x2c, 0x7a, 0x50, 0x5a, 0xca, 0xcd, 0x5d, 0xd0, 0x51, 0xf4, 0x30, 0x08, 0xa6, 0x58, 0x45, 0xb5,
	0xa3, 0x0d, 0x9a, 0x41, 0x64, 0x17, 0x6a, 0x42, 0x95, 0x1f, 0xe3, 0xd9, 0x52, 0x3e, 0xda, 0xa0,
	0x29, 0x42, 0x1a, 0x00, 0x38, 0xee, 0x4e, 0x03, 0x27, 0x36, 0xeb, 0x5c, 0xfb, 0xd1, 0x06, 0xcd,
	0x61, 0xc4, 0x2a, 0xc6, 0x68, 0x93, 0x3b, 0x7d, 0xb4, 0x51, 0x88, 0xd2, 0x61, 0x15, 0xca, 0x48,
	0x5a, 0xdf, 0x42, 0x59, 0x6c, 0xbe, 0xac, 0x04, 0x74, 0x2c, 0x81, 0xb4, 0x6b, 0xa8, 0xab, 0x5b,
	0x9f, 0x56, 0x68, 0xe6, 0x06, 0x68, 0x67, 0xb4, 0x27, 0xf3, 0xc1, 0x87, 0x3c, 0x3e, 0x87, 0x9e,
	0xdf, 0x76, 0x62, 0x47, 0x9e, 0xde, 0x09, 0x69, 0xfd, 0x53, 0x81, 0x6b, 0x98, 0x81, 0xa9, 0x37,
	0xf1, 0x29, 0x8b, 0xe6, 0xd3, 0x98, 0x7c, 0x08, 0xfa, 0xb1, 0xe3, 0xbb, 0x27, 0x4e, 0xf8, 0x4d,
	0x64, 0x2a, 0xb8, 0x3d, 0xaa, 0xb6, 0x68, 0xe2, 0x34, 0xe3, 0xf0, 0xc3, 0x37, 0x21, 0x86, 0xe3,
	0x20, 0x64, 0x91, 0xa9, 0x36, 0xb4, 0x3d, 0x95, 0x2e, 0xa0, 0xe4, 0x36, 0x68, 0x87, 0xc1, 0x4b,
	0xd9, 0x07, 0xca, 0x36, 0x36, 0x00, 0x8e, 0x90, 0x4f, 0xa1, 0x22, 0x27, 0x96, 0xd0, 0xc8, 0xae,
	0xbd, 0xe0, 0x89, 0x2d, 0xd8, 0xe2, 0x1c, 0x96, 0xb2, 0x3b, 0x9f, 0x43, 0x3d, 0x07, 0x5f, 0x75,
	0xea, 0xaa, 0xf9, 0x53, 0xf7, 0x5f, 0x0a, 0xe8, 0xdc, 0x44, 0xff, 0xb7, 0x3e, 0x0b, 0xf9, 0xb6,
	0xc4, 0x01, 0x5e, 0x42, 0x44, 0xa1, 0x65, 0x00, 0x0f, 0x19, 0x12, 0x3d, 0x37, 0xd9, 0x75, 0x92,
	0xe4, 0x6d, 0x8b, 0xb2, 0xf1, 0x80, 0xb9, 0x2c, 0x8a, 0x43, 0xcf, 0xf1, 0x31, 0xd0, 0xf5, 0x83,
	0x6d, 0xbb, 0x80, 0xd2, 0xa2, 0x10, 0x6f, 0x3a, 0x94, 0x8d, 0x1f, 0xb1, 0xe7, 0xde, 0x58, 0xf6,
	0x73, 0xde, 0x74, 0x32, 0x88, 0xe6, 0xd8, 0xa4, 0x05, 0x84, 0xb2, 0xf1, 0x69, 0xe0, 0x9f, 0x04,
	0x71, 0x10, 0x26, 0x93, 0x2a, 0x38, 0xe9, 0x86, 0xbd, 0xcc, 0xa2, 0x2b, 0xc4, 0xad, 0x57, 0x25,
	0xa8, 0x52, 0x36, 0xe6, 0x0b, 0x5e, 0xea, 0x29, 0x57, 0xb5, 0xac, 0x86, 0x68, 0xeb, 0x9a, 0x5c,
	0x59, 0xe1, 0x68, 0x10, 0xed, 0xfd, 0x00, 0xea, 0xb9, 0x4c, 0xc9, 0x18, 0x18, 0x8b, 0x19, 0xa4,
	0x79, 0x21, 0xf2, 0x0b, 0xd0, 0xbf, 0x9c, 0x3b, 0x53, 0x2f, 0xf6, 0x58, 0x64, 0x96, 0x31, 0xe7,
	0xb7, 0x6d, 0xe9, 0xa2, 0x9d, 0x72, 0x44, 0xba, 0x33, 0x49, 0x7e, 0x39, 0x91, 0x1d, 0x2f, 0xc2,
	0x18, 0xe8, 0x34, 0xa5, 0x89, 0x0d, 0x90, 0x36, 0x87, 0xc8, 0xac, 0xa2, 0xce, 0x6d, 0xbb, 0xd0,
	0x53, 0x68, 0x4e, 0x82, 0xec, 0xc3, 0x26, 0x7a, 0xc4, 0xc4, 0x5a, 0xf0, 0xc8, 0xc9, 0x0e, 0xae,
	0x02, 0x8f, 0x1c, 0xc1, 0xad, 0x51, 0xe8, 0xf8, 0xd1, 0xb3, 0x20, 0x9c, 0x31, 0x37, 0xbf, 0x5a,
	0x7d, 0xcd, 0x6a, 0xd7, 0xc8, 0xf3, 0x9d, 0xca, 0x45, 0xd3, 0xfb, 0xa9, 0xa4, 0x48, 0x03, 0xca,
	0x58, 0x55, 0xd8, 0x3a, 0xea, 0x07, 0x60, 0xa7, 0xd5, 0x49, 0x05, 0x63, 0xe7, 0x57, 0xb0, 0x5d,
	0x0c, 0xcc, 0x5b, 0x15, 0xfc, 0x63, 0xb8, 0xce, 0xfb, 0x63, 0xd3, 0x77, 0x73, 0xb9, 0xcd, 0x6a,
	0xa1, 0x8c, 0xb5, 0xb0, 0xaa, 0xa1, 0x16, 0xeb, 0x43, 0x5b, 0x6a, 0xdc, 0x21, 0x90, 0x96, 0x13,
	0xb3, 0x49, 0x10, 0x5e, 0x36, 0x7d, 0x57, 0x66, 0x63, 0x49, 0xb3, 0x05, 0x9b, 0x89, 0x54, 0xce,
	0x42, 0x01, 0x23, 0x7b, 0x50, 0xee, 0xc5, 0x6c, 0x16, 0x99, 0x1a, 0xe6, 0x8e, 0xd8, 0x4b, 0x0e,
	0x53, 0x21, 0x60, 0xfd, 0x4d, 0x01, 0x18, 0xb0, 0xe0, 0x62, 0x8a, 0xa9, 0x25, 0xf7, 0x41, 0x1b,
	0xb2, 0x97, 0xf2, 0x6e, 0xb2, 0x6a, 0x1a, 0x67, 0x73, 0xa9, 0xe6, 0x84, 0xc9, 0xfb, 0xc9, 0x4a,
	0xa9, 0xe6, 0x84, 0x11, 0x1b, 0x6a, 0xa7, 0x8e, 0xb8, 0xd0, 0xcb, 0x9a, 0x5f, 0x25, 0x9a, 0xca,
	0x90, 0x8f, 0xa1, 0x96, 0x2c, 0x42, 0xf6, 0xae, 0x1b, 0xf6, 0x72, 0x3c, 0x68, 0x2a, 0x64, 0xfd,
	0xa0, 0xe5, 0xb7, 0xff, 0xd2, 0x76, 0x6c, 0xe4, 0x6f, 0x51, 0x2b, 0xb7, 0x5b, 0x7e, 0x0f, 0x68,
	0x0b, 0x7b, 0xe0, 0x63, 0xd0, 0x4f, 0x02, 0x97, 0x4d, 0xb1, 0x91, 0x89, 0x8d, 0x78, 0xdd, 0x96,
	0xa6, 0x52, 0x06, 0xcd, 0x64, 0xc8, 0xae, 0xbc, 0xd3, 0xc8, 0x36, 0x54, 0xb1, 0x91, 0xa2, 0xf2,
	0xa2, 0xb3, 0x07, 0xd5, 0xe1, 0xe5, 0xec, 0x69, 0x30, 0xe5, 0xbb, 0x4d, 0xec, 0x27, 0xa9, 0x4c,
	0xc0, 0x34, 0x61, 0x93, 0x0f, 0xa1, 0x32, 0x98, 0x3a, 0xd9, 0xc6, 0xdb, 0xb2, 0x8f, 0xbd, 0x31,
	0xf3, 0x23, 0x86, 0x28, 0x95, 0x4c, 0xb2, 0x0f, 0x30, 0x70, 0xa2, 0x88, 0xf9, 0x13, 0x16, 0x46,
	0x66, 0x0d, 0x45, 0xc1, 0x4e, 0x21, 0x9a, 0xe3, 0x72, 0xd9, 0xdc, 0x7e, 0xd6, 0xa5, 0xec, 0xea,
	0xbd, 0x6c, 0x42, 0xf5, 0xc8, 0x89, 0xf8, 0x96, 0xc1, 0x6d, 0x55, 0xa3, 0x09, 0xc9, 0xef, 0x88,
	0xc9, 0x77, 0xf4, 0x63, 0x2f, 0x7e, 0x8e, 0x7e, 0x98, 0x86, 0x4c, 0xec, 0x12, 0x87, 0x2e, 0x0b,
	0x5b, 0xff, 0x51, 0x56, 0xb5, 0xe0, 0x1f, 0x91, 0xb8, 0xe2, 0x82, 0xb4, 0x37, 0x2e, 0xa8, 0x18,
	0xa8, 0xd2, 0x1b, 0x03, 0x95, 0x2f, 0x88, 0xf2, 0x42, 0x41, 0x7c, 0x00, 0x65, 0xb1, 0x64, 0x71,
	0x62, 0x2c, 0xa4, 0x45, 0xf0, 0xf2, 0xd1, 0xab, 0x16, 0xa2, 0x67, 0xfd, 0x59, 0x03, 0x3d, 0xb5,
	0xb4, 0xb4, 0xe4, 0x5d, 0x28, 0xe1, 0x24, 0xb1, 0xe6, 0x5a, 0xd2, 0xbf, 0x29, 0xa2, 0xbc, 0xd3,
	0xb5, 0x43, 0xef, 0x05, 0x0b, 0xb1, 0x4a, 0x6b, 0x54, 0x52, 0x49, 0xa0, 0x4a, 0xeb, 0x03, 0xb5,
	0x0b, 0xfa, 0xe0, 0x79, 0xe0, 0xb3, 0xee, 0xd4, 0x99, 0xc8, 0x6f, 0xd0, 0x0c, 0xe0, 0xcb, 0x3d,
	0x64, 0xd3, 0x18, 0x99, 0xe2, 0x1b, 0x34, 0xa5, 0xc9, 0x1e, 0x5c, 0x43, 0xc1, 0xa5, 0xef, 0xd0,
	0x45, 0x98, 0x5f, 0x59, 0xf8, 0xac, 0x9c, 0x60, 0x0d, 0x05, 0x17, 0xd0, 0xb7, 0xaa, 0xc2, 0xfb,
	0xe2, 0x0a, 0x3b, 0x0e, 0x5e, 0xb0, 0x10, 0xdd, 0xc3, 0x6b, 0x22, 0x2d, 0x82, 0xe4, 0x13, 0xb8,
	0x91, 0x02, 0x39, 0xf3, 0x78, 0x65, 0xa4, 0xab, 0x58, 0xe4, 0x67, 0x00, 0xd4, 0xf1, 0xbf, 0x61,
	0x2e, 0x46, 0xdb, 0x90, 0x99, 0x6c, 0x39, 0x17, 0x3c, 0xc7, 0x08, 0xd2, 0x9c, 0x80, 0xf5, 0x07,
	0x75, 0xe1, 0x5a, 0xf2, 0x23, 0x6a, 0xf5, 0x8a, 0xae, 0x4f, 0x7e, 0x0a, 0x3a, 0xea, 0xe7, 0xab,
	0x97, 0xa9, 0xac, 0xdb, 0x59, 0x4b, 0xa6, 0x19, 0x37, 0xad, 0x92, 0xf2, 0xca, 0x2a, 0x79, 0xd3,
	0x89, 0xfe, 0x76, 0xeb, 0xce, 0x97, 0xf1, 0xf5, 0x62, 0x19, 0xff, 0x5b, 0x03, 0x63, 0xb1, 0x0b,
	0x72, 0xf1, 0x61, 0x7c, 0x39, 0xcd, 0xbe, 0x2d, 0x12, 0x92, 0x9f, 0xa2, 0x38, 0x4c, 0x1e, 0x6b,
	0x90, 0xe0, 0xb5, 0x85, 0x83, 0xa5, 0xb8, 0x2c, 0xc2, 0x78, 0xc7, 0x0e, 0x1d, 0xdf, 0xed, 0xb9,
	0xf2, 0x25, 0x22, 0x21, 0xb9, 0x66, 0x1c, 0xca, 0x7d, 0x2a, 0x08, 0xae, 0x19, 0x07, 0x39, 0xcd,
	0x15, 0xa1, 0x79, 0x01, 0xc6, 0xd7, 0xb9, 0xf9, 0xd3, 0x44, 0x79, 0x15, 0x95, 0xe7, 0x10, 0x7c,
	0xd9, 0x93, 0x14, 0xd6, 0xb3, 0x4e, 0x53, 0x9a, 0xd8, 0x40, 0x92, 0x71, 0xce, 0x90, 0x8e, 0x86,
	0x56, 0x70, 0xf8, 0xf7, 0x17, 0x06, 0xeb, 0x09, 0x73, 0x92, 0xe7, 0xb4, 0x32, 0xcd, 0x43, 0x7c,
	0x9f, 0xa6, 0x24, 0xd6, 0xaf, 0x4e, 0x33, 0x80, 0xd7, 0x79, 0x4a, 0xe4, 0x0c, 0x6e, 0x8a, 0x3a,
	0x5f, 0xc1, 0xe2, 0x1d, 0x63, 0x10, 0x44, 0x3c, 0x21, 0x5b, 0xe2, 0x2b, 0x46, 0x50, 0xfc, 0x5a,
	0xc2, 0x47, 0xe6, 0xb6, 0xb8, 0x96, 0xf0, 0x31, 0xdf, 0xbf, 0xfc, 0x7f, 0x4e, 0xf1, 0x35, 0xb1,
	0x7f, 0x8b, 0xa8, 0xf5, 0x5a, 0x85, 0xcd, 0x7c, 0xcf, 0xc3, 0xe6, 0xc2, 0x07, 0x23, 0xf6, 0x32,
	0x96, 0x57, 0xa7, 0x0c, 0xc8, 0xce, 0x43, 0x75, 0xd5, 0x79, 0x98, 0x2b, 0x19, 0xad, 0x58, 0x32,
	0xbb, 0xa0, 0xe3, 0x30, 0xf7, 0x6a, 0x9a, 0x01, 0x57, 0x7d, 0xfc, 0x16, 0x5e, 0x58, 0x2a, 0xeb,
	0x5f, 0x58, 0x3e, 0x83, 0xdb, 0xc7, 0xc1, 0xd8, 0x99, 0x0e, 0xc2, 0xe0, 0x85, 0xe7, 0x8f, 0x97,
	0xbb, 0xdc, 0x3a, 0xb6, 0x15, 0xc2, 0x56, 0xe1, 0xe0, 0xc6, 0x42, 0xc1, 0x51, 0x5a, 0xfd, 0x29,
	0x8d, 0x45, 0x86, 0xe3, 0xdc, 0x4d, 0x2d, 0x87, 0x14, 0xbc, 0xd5, 0xd6, 0x3f, 0x24, 0xfd, 0x06,
	0xb6, 0x86, 0x71, 0x10, 0x3a, 0x13, 0xe1, 0xc8, 0x84, 0x47, 0xaf, 0xe9, 0xba, 0x21, 0x8b, 0xa2,
	0xe4, 0x29, 0x53, 0x92, 0xe4, 0x5d, 0x28, 0xe1, 0x8d, 0x45, 0xc5, 0xb7, 0x9b, 0xaa, 0xdd, 0x3e,
	0xc4, 0x7b, 0x0a, 0x82, 0x3c, 0xfb, 0x23, 0x67, 0x22, 0x0e, 0x4c, 0x9d, 0xe2, 0x78, 0xff, 0xaf,
	0xea, 0x8a, 0xa7, 0x1f, 0x72, 0x17, 0x76, 0x5a, 0x67, 0xa3, 0xc3, 0x7e, 0x93, 0xb6, 0xcf, 0xdb,
	0x3d, 0xda, 0x69, 0x8d, 0x7a, 0xfd, 0xd3, 0xf3, 0xb3, 0xd3, 0x87, 0xa7, 0xfd, 0xc7, 0xa7, 0xc6,
	0x06, 0x79, 0x0f, 0xee, 0xac, 0xe2, 0x0f, 0x1e, 0x37, 0x69, 0xdb, 0x50, 0xc8, 0xbb, 0x70, 0x7b,
	0x05, 0xbb, 0xcd, 0xe7, 0xaa, 0x6b, 0x98, 0xc7, 0x9d, 0xee, 0xc8, 0xd0, 0xc8, 0x2e, 0x98, 0x2b,
	0x98, 0xb4, 0xf7, 0xe0, 0x68, 0x64, 0x94, 0x88, 0x05, 0x77, 0xd7, 0x4c, 0x4d, 0x6c, 0x97, 0x49,
	0x03, 0x76, 0xd7, 0xc9, 0xa0, 0x03, 0x15, 0xf2, 0x01, 0xbc, 0xbf, 0xce, 0x46, 0xa2, 0xa6, 0x4a,
	0xee, 0xc1, 0x7b, 0x6b, 0x85, 0x50, 0x4f, 0x6d, 0xff, 0xe5, 0xc2, 0x53, 0x1b, 0xd9, 0x81, 0x5b,
	0xe9, 0x9c, 0xe1, 0xa0, 0xd3, 0x69, 0xe7, 0x22, 0x76, 0x1b, 0x6e, 0x2c, 0xf0, 0x8e, 0x7a, 0x0f,
	0x8e, 0x0c, 0x85, 0xdc, 0x81, 0x77, 0x16, 0x18, 0xa7, 0x7d, 0x7a, 0xd2, 0x3c, 0x36, 0xd4, 0x15,
	0x73, 0x86, 0xc7, 0xfd, 0xc7, 0x86, 0xb6, 0xff, 0x0f, 0x2d, 0x7d, 0xe9, 0x27, 0x37, 0xc1, 0xe8,
	0x1f, 0x7e, 0x71, 0x3e, 0x7a, 0x32, 0xe8, 0xe4, 0xcc, 0x19, 0xb0, 0x99, 0xa2, 0xad, 0x26, 0x35,
	0x94, 0x82, 0xdc, 0x61, 0xaf, 0xf5, 0xa4, 0x75, 0xdc, 0x31, 0x54, 0xf2, 0x0e, 0x5c, 0x4f, 0xd1,
	0x11, 0x95, 0xb0, 0xc6, 0x2d, 0xa7, 0xf0, 0xa0, 0xd3, 0xee, 0x0c, 0x47, 0xb4, 0xd7, 0x3c, 0x35,
	0x4a, 0x84, 0xc0, 0x56, 0xca, 0xe8, 0x36, 0x5b, 0x1d, 0xe3, 0x55, 0x8d, 0xec, 0xc2, 0xed, 0x14,
	0x7b, 0xd4, 0x39, 0xea, 0xb5, 0x8e, 0xf9, 0xff, 0xd6, 0xa8, 0x4f, 0x8d, 0x57, 0x46, 0x81, 0x2b,
	0xed, 0x26, 0xdc, 0xef, 0x0c, 0xf2, 0x1e, 0x98, 0x4b, 0xf6, 0x13, 0xf6, 0xf7, 0x06, 0x79, 0x1f,
	0x76, 0x56, 0xf8, 0x91, 0x08, 0xbc, 0x36, 0xc8, 0x1d, 0xb8, 0x59, 0xf0, 0x27, 0x35, 0x6c, 0x92,
	0xbb, 0x70, 0x67, 0xc9, 0xad, 0x24, 0x9c, 0xc6, 0xab, 0x46, 0x81, 0x9f, 0x38, 0x96, 0xf2, 0xbf,
	0x6b, 0x14, 0x6c, 0xa7, 0xae, 0xa5, 0x02, 0xdf, 0x37, 0xc8, 0x3d, 0xd8, 0x5d, 0xe5, 0x5c, 0x2a,
	0xf2, 0xba, 0x41, 0xde, 0x85, 0x5b, 0x45, 0xf7, 0x32, 0x07, 0xf6, 0xc8, 0xf5, 0x5c, 0x8e, 0x9a,
	0xc7, 0xc7, 0xc6, 0x5f, 0x3e, 0xda, 0x7f, 0x00, 0xf5, 0xb6, 0x13, 0x3b, 0xdd, 0x59, 0x8c, 0xb9,
	0xdd, 0x06, 0x90, 0x29, 0xed, 0x9e, 0x8c, 0x8c, 0x0d, 0x52, 0x83, 0xd2, 0x17, 0xc3, 0xfe, 0xa9,
	0xa1, 0x90, 0x4d, 0xa8, 0x0d, 0x68, 0x7f, 0xd4, 0x3f, 0x3c, 0xeb, 0x1a, 0x2a, 0xa9, 0x82, 0xd6,
	0x1a, 0x3e, 0x32, 0x34, 0x3e, 0x18, 0xb4, 0xbb, 0x46, 0x69, 0xff, 0x1c, 0xea, 0xa3, 0xe7, 0x21,
	0x63, 0xc3, 0xd8, 0x89, 0xe7, 0x11, 0xb9, 0x05, 0x64, 0x74, 0x44, 0x3b, 0x9d, 0xf3, 0xe1, 0xa8,
	0x39, 0x3a, 0x1b, 0x9e, 0x77, 0x9b, 0xc7, 0xc3, 0x8e, 0xb1, 0xc1, 0xd3, 0x5f, 0xc0, 0x47, 0xf4,
	0xac, 0x63, 0x28, 0xe4, 0x1e, 0xdc, 0x2c, 0xc0, 0x49, 0x5d, 0xfd, 0x37, 0xf9, 0x53, 0xf6, 0x3f,
	0x81, 0x8a, 0xe8, 0x2d, 0x44, 0x87, 0xf2, 0xc3, 0x66, 0xf7, 0x61, 0xd3, 0xd8, 0x40, 0xaf, 0xfa,
	0xc3, 0xd1, 0x03, 0xda, 0x19, 0x1a, 0x0a, 0xd9, 0x02, 0xbd, 0xdb, 0x3b, 0xee, 0xf4, 0x4e, 0x9a,
	0x0f, 0x3a, 0x86, 0x7a, 0x78, 0x0f, 0xde, 0x1f, 0x07, 0x33, 0xdb, 0x65, 0xec, 0x62, 0x32, 0xf5,
	0xfc, 0x18, 0x47, 0xf8, 0x13, 0x91, 0x3b, 0xb1, 0x67, 0xfc, 0x10, 0x7b, 0x5a, 0xc1, 0xdf, 0xe7,
	0x7e, 0xfe, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x2c, 0xae, 0xb3, 0x14, 0xcf, 0x1b, 0x00, 0x00,
}
